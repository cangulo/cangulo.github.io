"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[3416],{9375:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return p},assets:function(){return h},toc:function(){return g},default:function(){return d}});var n=a(7462),o=a(3366),l=(a(7294),a(3905)),r=a(4473),i=(a(7440),a(4888)),s=a(2680),u=["components"],c={slug:"cangulo.nuke.releasecreator",title:"cangulo.nuke.releasecreator",date:new Date("2021-11-26T00:00:00.000Z"),authors:"cangulo",tags:["nuke","cicd","releases"]},m=void 0,p={permalink:"/projects/cangulo.nuke.releasecreator",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nuke/cangulo.nuke.releasecreator.mdx",source:"@site/blog/projects/nuke/cangulo.nuke.releasecreator.mdx",title:"cangulo.nuke.releasecreator",description:"Problem I want to solve",date:"2021-11-26T00:00:00.000Z",formattedDate:"November 26, 2021",tags:[{label:"nuke",permalink:"/projects/tags/nuke"},{label:"cicd",permalink:"/projects/tags/cicd"},{label:"releases",permalink:"/projects/tags/releases"}],readingTime:2.205,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],prevItem:{title:"cangulo.nuke.prcommitsvalidations",permalink:"/projects/cangulo.nuke.prcommitsvalidations"}},h={authorsImageUrls:[void 0]},g=[{value:"Problem I want to solve",id:"problem-i-want-to-solve",children:[],level:2},{value:"Goals",id:"goals",children:[],level:2},{value:"Approach",id:"approach",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2},{value:"How to use it?",id:"how-to-use-it",children:[],level:2},{value:"Where do I use it?",id:"where-do-i-use-it",children:[],level:2},{value:"Repository",id:"repository",children:[],level:2},{value:"GitHub Action",id:"github-action",children:[],level:2}],k={toc:g};function d(e){var t=e.components,a=(0,o.Z)(e,u);return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"problem-i-want-to-solve"},"Problem I want to solve"),(0,l.kt)("p",null,"Every time I want to release a new version in my C# projects, I have to do it manually or define a custom GH action for every repo. I would like to have a general solution that makes this automatically every time I merge a PR. Also, as I have been playing with ",(0,l.kt)("a",{parentName:"p",href:"https://nuke.build/index.html"},"NUKE")," lately, I want to include it in the solution. "),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("a",{parentName:"p",href:"https://nuke.build/index.html"},"NUKE")," is a build automation framework where you define operations as build, test or push NuGets, in a C# project. I found good reviews and some videos in ",(0,l.kt)("a",{parentName:"p",href:"https://channel9.msdn.com/Shows/On-NET/Build-Automation-with-NUKE"},"Channel9")," about it. So, for instance, dotnet commands are predefined methods, and its arguments are extension methods, check the next example:"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"How a NUKE project looks like?"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"Target Pack => _ => _\n    .DependsOn(Clean)\n    .Executes(() => \n    {\n      DotNetTasks\n          .DotNetPack(s => s\n              .SetProject(project.Path)\n              .SetOutputDirectory(outputFolderAbsolutePath)\n              .SetConfiguration(configuration)\n              .SetVersionPrefix(currentPackageVersion)\n              .SetVersionSuffix(versionSuffix)\n              .EnableNoRestore());\n    });\n"))))),(0,l.kt)("h2",{id:"goals"},"Goals"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Build a solution that releases a new version every time a PR is merged."),(0,l.kt)("li",{parentName:"ul"},"The Solution should be based on NUKE."),(0,l.kt)("li",{parentName:"ul"},"Any repository should be able to use it.")),(0,l.kt)("h2",{id:"approach"},"Approach"),(0,l.kt)("p",null,"cangulo.nuke.releasecreator will execute the following operations sequentially:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Calculate the next version based on the commits merged"),(0,l.kt)("li",{parentName:"ol"},"Release a new version through the GH API client (provided by NUKE). ")),(0,l.kt)("p",null,"Next are the requirements for calculating the release number:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The repository app follows ",(0,l.kt)("a",{parentName:"li",href:"https://semver.org"},"Semantic Versioning.")),(0,l.kt)("li",{parentName:"ul"},"All PR contain ",(0,l.kt)("a",{parentName:"li",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits")," which set the release to be created (",(0,l.kt)("em",{parentName:"li"},"major"),", ",(0,l.kt)("em",{parentName:"li"},"minor")," or ",(0,l.kt)("em",{parentName:"li"},"fix"),").")),(0,l.kt)("p",null,"So, if an app has the version ",(0,l.kt)("inlineCode",{parentName:"p"},"0.0.2")," and a PR with a ",(0,l.kt)("em",{parentName:"p"},"fix")," commit as  ",(0,l.kt)("inlineCode",{parentName:"p"},"fix: solved error in the controller")," is merged, the version released will be ",(0,l.kt)("inlineCode",{parentName:"p"},"0.0.3"),"."),(0,l.kt)("h2",{id:"remarks"},"Remarks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"I'm not saying NUKE is the best solution, I just want to give it a try \ud83d\ude0a. In the future, I will create another solution based on scripts."),(0,l.kt)("li",{parentName:"ul"},"As I started coding this, I realize that I can define more tasks as:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"To update the version in ",(0,l.kt)("inlineCode",{parentName:"li"},".csproj")," files. I did this as optional."),(0,l.kt)("li",{parentName:"ul"},"To update the changelog using ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets/cangulo.changelog"},"cangulo.changelog")),(0,l.kt)("li",{parentName:"ul"},"To push custom Assets to the release,  like a JSON schema that we updated")))),(0,l.kt)("h2",{id:"how-to-use-it"},"How to use it?"),(0,l.kt)("p",null,"Please check the examples given ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-actions/cangulo.nuke.releasecreator#examples"},"here"),"."),(0,l.kt)("h2",{id:"where-do-i-use-it"},"Where do I use it?"),(0,l.kt)("p",null,"I call this solution through a specific ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-actions/cangulo.nuke.releasecreator"},"GH Action")," in the next projects:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/.github/workflows/4-Release-New-Version.yml"},"cangulo-nugets/cangulo.changelog")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets/cangulo.common.testing/blob/v0.0.2/.github/workflows/4-Release-New-Version.yml"},"cangulo-nugets/cangulo.common.testing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations/blob/v0.0.1/.github/workflows/3-Release_New_Version.yml"},"cangulo-nuke/cangulo.nuke.prcommitsvalidations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-actions/cangulo.nuke.prcommitsvalidations/blob/v0.0.1/.github/workflows/2-release_new_version.yml"},"cangulo-actions/cangulo.nuke.prcommitsvalidations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-tf/basic-iac/blob/v0.0.2/.github/workflows/3-Release_New_Version.yml"},"cangulo-tf/basic-iac"))),(0,l.kt)("h2",{id:"repository"},"Repository"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator"},"solution cangulo.nuke.releasecreator")),(0,l.kt)("h2",{id:"github-action"},"GitHub Action"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-actions/cangulo.nuke.releasecreator"},"github action to execute in ANY repository")),(0,l.kt)(s.ZP,{mdxType:"AboutMePostArea"}),(0,l.kt)(r.Z,{slug:"projects/cangulo.nuke.releasecreator",title:"TITLE",tags:["nuke","cicd","releases"],mdxType:"ShareCard"}),(0,l.kt)(i.Z,{slug:"projects/cangulo.nuke.releasecreator",mdxType:"Comments"}))}d.isMDXComponent=!0},2680:function(e,t,a){a.d(t,{ZP:function(){return s}});var n=a(7462),o=a(3366),l=(a(7294),a(3905)),r=["components"],i={toc:[{value:"About me",id:"about-me",children:[],level:2}]};function s(e){var t=e.components,a=(0,o.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"about-me"},"About me"),(0,l.kt)("p",null,"I'm a Software Engineer at ",(0,l.kt)("a",{parentName:"p",href:"https://ohpen.com"},"Ohpen"),". I have strong experience with dotnet technologies, AWS and Terraform. I have also worked with Front-End languages as JavaScript, Angular and React. I'm a challenge-seeker person , I think all challenges are opportunities to grow. Feel free to contact me via LinkedIn."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/cangulo/cangulo/raw/main/profile_picture_aboutme_post_area.png",alt:"profile image"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Per aspera ad astra.")),(0,l.kt)("p",null,"LinkedIn - ",(0,l.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/angulomascarell"},"Carlos Angulo Mascarell"),(0,l.kt)("br",{parentName:"p"}),"\n","Twitter - ",(0,l.kt)("a",{parentName:"p",href:"https://twitter.com/angulomascarell"},"@AnguloMascarell"),(0,l.kt)("br",{parentName:"p"}),"\n","GitHub - ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo"},"Carlos Angulo Mascarell - cangulo"),(0,l.kt)("br",{parentName:"p"}),"\n","Personal Web Site - ",(0,l.kt)("a",{parentName:"p",href:"https://cangulo.github.io"},"cangulo.github.io")))}s.isMDXComponent=!0},7440:function(e,t,a){var n=a(7294);t.Z=function(e){var t=e.label,a=e.linkIsRelative,o=e.link;if(o){var l="true"===a?"https://raw.githubusercontent.com/cangulo/cangulo.github.io/main/blog/".concat(o):o;return n.createElement("a",{href:l},n.createElement("p",{className:"text--center"},null!=t?t:"Link to the file"))}return n.createElement("p",{className:"text--center"},null!=t?t:"Link to the file")}},4888:function(e,t,a){var n=a(7294),o=a(4610),l=a(2263);t.Z=function(){var e=(0,l.Z)().siteConfig.customFields.hyvorTalkSiteId;return n.createElement("section",null,n.createElement("h2",null,"Comments"),n.createElement(o.Z.Embed,{loadMode:"scroll",websiteId:e}))}},4473:function(e,t,a){var n=a(7294),o=a(3597),l=a(7332),r=a(6616),i=a(7385),s=a(8137),u=a(6339),c=a(2834),m=a(9275),p=a(8168),h=a(4276),g=a(2263);t.Z=function(e){var t=e.slug,a=e.title,k=e.tags,d=(0,g.Z)().siteConfig.url+"/"+t;return n.createElement("div",null,n.createElement("h2",null,"Did you like it? Share It!"),n.createElement(o.Z,{url:d,title:a},n.createElement(l.Z,{size:32,round:!0})),n.createElement(r.Z,{url:d,title:a,via:"AnguloMascarell",hashtags:null!=k?k:""},n.createElement(i.Z,{size:32,round:!0})),n.createElement(s.Z,{subject:"Check this post about "+a,body:"Hi there, check the next post: "+a+" \n\n",url:d},n.createElement(u.Z,{size:32,round:!0})),n.createElement(c.Z,{url:d,title:a},n.createElement(m.Z,{size:32,round:!0})),n.createElement(p.Z,{title:a,url:d},n.createElement(h.Z,{size:32,round:!0})),n.createElement("br",{style:{marginBottom:"15px"}}))}}}]);