"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[492],{7513:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return g},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return i},toc:function(){return m},default:function(){return h}});var o=n(3117),a=n(102),l=(n(7294),n(3905)),c=(n(6785),n(3114),n(4888)),r=["components"],g={slug:"cangulo.changelog",title:"cangulo.changelog",date:new Date("2021-11-26T00:00:00.000Z"),authors:"cangulo",tags:["cicd","cangulo.changelog","personal-nuget-packages","changelog"]},s=void 0,u={permalink:"/projects/cangulo.changelog",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nugets/cangulo.changelog.mdx",source:"@site/blog/projects/nugets/cangulo.changelog.mdx",title:"cangulo.changelog",description:"Problem I want to solve",date:"2021-11-26T00:00:00.000Z",formattedDate:"November 26, 2021",tags:[{label:"cicd",permalink:"/projects/tags/cicd"},{label:"cangulo.changelog",permalink:"/projects/tags/cangulo-changelog"},{label:"personal-nuget-packages",permalink:"/projects/tags/personal-nuget-packages"},{label:"changelog",permalink:"/projects/tags/changelog"}],readingTime:.875,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],nextItem:{title:"cangulo.nuke.prcommitsvalidations",permalink:"/projects/cangulo.nuke.prcommitsvalidations"}},i={authorsImageUrls:[void 0]},m=[{value:"Problem I want to solve",id:"problem-i-want-to-solve",children:[],level:2}],p={toc:m};function h(e){var t=e.components,n=(0,a.Z)(e,r);return(0,l.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"problem-i-want-to-solve"},"Problem I want to solve"),(0,l.kt)("p",null,"I have the solution ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator"},"cangulo.nuke.releasecreator")," to handle releases in my GH repos. However, this doesn't document the changes, for that, I need a solution that updates the Changelog and create release notes, all, having as input the commit messages of the last PR merged."),(0,l.kt)(c.Z,{mdxType:"Comments"}))}h.isMDXComponent=!0},4888:function(e,t,n){var o=n(7294),a=n(4610),l=n(2263);t.Z=function(){var e=(0,l.default)().siteConfig,t=parseInt(e.customFields.hyvorTalkSiteId);return o.createElement("section",null,o.createElement("h2",null,"Comments"),o.createElement(a.Z.Embed,{loadMode:"scroll",websiteId:t}))}}}]);