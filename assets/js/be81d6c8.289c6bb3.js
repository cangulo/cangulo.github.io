"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[4891],{7588:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return m},assets:function(){return u},toc:function(){return p},default:function(){return d}});var o=n(3117),a=n(102),i=(n(7294),n(3905)),l=(n(6785),n(3114),n(4888)),r=["components"],c={slug:"cangulo.nuke.prcommitsvalidations",title:"cangulo.nuke.prcommitsvalidations",date:new Date("2021-11-26T00:00:00.000Z"),authors:"cangulo",tags:["nuke","cicd","commits","conventional-commits"]},s=void 0,m={permalink:"/projects/cangulo.nuke.prcommitsvalidations",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nuke/cangulo.nuke.prcommitsvalidations.mdx",source:"@site/blog/projects/nuke/cangulo.nuke.prcommitsvalidations.mdx",title:"cangulo.nuke.prcommitsvalidations",description:"Problem I want to solve",date:"2021-11-26T00:00:00.000Z",formattedDate:"November 26, 2021",tags:[{label:"nuke",permalink:"/projects/tags/nuke"},{label:"cicd",permalink:"/projects/tags/cicd"},{label:"commits",permalink:"/projects/tags/commits"},{label:"conventional-commits",permalink:"/projects/tags/conventional-commits"}],readingTime:1.66,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],prevItem:{title:"cangulo.changelog",permalink:"/projects/cangulo.changelog"},nextItem:{title:"cangulo.nuke.releasecreator",permalink:"/projects/cangulo.nuke.releasecreator"}},u={authorsImageUrls:[void 0]},p=[{value:"Problem I want to solve",id:"problem-i-want-to-solve",children:[],level:2}],g={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"problem-i-want-to-solve"},"Problem I want to solve"),(0,i.kt)("p",null,"I want to make sure all the commits in a PR follow custom conventions based on the ",(0,i.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/"},"Conventional Commits")," specification. The conventions should be per repository. Let's consider ",(0,i.kt)("em",{parentName:"p"},"fix"),", ",(0,i.kt)("em",{parentName:"p"},"minor _and _major")," as a reference."),(0,i.kt)("p",null,"On the other hand, as I have been playing with ",(0,i.kt)("a",{parentName:"p",href:"https://nuke.build/index.html"},"NUKE")," lately, I want to create a solution based on it."),(0,i.kt)(l.Z,{mdxType:"Comments"}))}d.isMDXComponent=!0},4888:function(e,t,n){var o=n(7294),a=n(4610),i=n(2263);t.Z=function(){var e=(0,i.default)().siteConfig,t=parseInt(e.customFields.hyvorTalkSiteId);return o.createElement("section",null,o.createElement("h2",null,"Comments"),o.createElement(a.Z.Embed,{loadMode:"scroll",websiteId:t}))}}}]);