"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[2986],{4538:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(7294)),o=l(n(5697));function l(e){return e&&e.__esModule?e:{default:e}}function i(e){var t=e.label,n=e.link;return n?a.default.createElement("a",{href:n},a.default.createElement("p",{style:{textAlign:"center"}},null!=t?t:"File Link")):a.default.createElement("p",{style:{textAlign:"center"}},null!=t?t:"")}i.propTypes={label:o.default.string.isRequired,link:o.default.string};var r=i;t.default=r},6785:function(e,t,n){Object.defineProperty(t,"W",{enumerable:!0,get:function(){return o.default}});var a,o=(a=n(4538))&&a.__esModule?a:{default:a}},9089:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return m},metadata:function(){return p},assets:function(){return h},toc:function(){return d},default:function(){return k}});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),i=n(4473),r=(n(1147),n(4888)),s=n(2680),u=["components"],c={slug:"cangulo.nuke.prcommitsvalidations",title:"cangulo.nuke.prcommitsvalidations",date:new Date("2021-11-26T00:00:00.000Z"),authors:"cangulo",tags:["nuke","cicd","commits","conventional-commits"]},m=void 0,p={permalink:"/projects/cangulo.nuke.prcommitsvalidations",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nuke/cangulo.nuke.prcommitsvalidations.mdx",source:"@site/blog/projects/nuke/cangulo.nuke.prcommitsvalidations.mdx",title:"cangulo.nuke.prcommitsvalidations",description:"Problem I want to solve",date:"2021-11-26T00:00:00.000Z",formattedDate:"November 26, 2021",tags:[{label:"nuke",permalink:"/projects/tags/nuke"},{label:"cicd",permalink:"/projects/tags/cicd"},{label:"commits",permalink:"/projects/tags/commits"},{label:"conventional-commits",permalink:"/projects/tags/conventional-commits"}],readingTime:1.695,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],prevItem:{title:"cangulo.changelog",permalink:"/projects/cangulo.changelog"},nextItem:{title:"cangulo.nuke.releasecreator",permalink:"/projects/cangulo.nuke.releasecreator"}},h={authorsImageUrls:[void 0]},d=[{value:"Problem I want to solve",id:"problem-i-want-to-solve",children:[],level:2},{value:"Goals",id:"goals",children:[],level:2},{value:"Approach",id:"approach",children:[],level:2},{value:"Remarks",id:"remarks",children:[],level:2},{value:"How to use it?",id:"how-to-use-it",children:[],level:2},{value:"Where do I use it?",id:"where-do-i-use-it",children:[],level:2},{value:"Repository",id:"repository",children:[],level:2},{value:"GitHub Action",id:"github-action",children:[],level:2}],g={toc:d};function k(e){var t=e.components,n=(0,o.Z)(e,u);return(0,l.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"problem-i-want-to-solve"},"Problem I want to solve"),(0,l.kt)("p",null,"I want to make sure all the commits in a PR follow custom conventions based on the ",(0,l.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/"},"Conventional Commits")," specification. The conventions should be per repository. Let's consider ",(0,l.kt)("em",{parentName:"p"},"fix"),", ",(0,l.kt)("em",{parentName:"p"},"minor _and _major")," as a reference."),(0,l.kt)("p",null,"On the other hand, as I have been playing with ",(0,l.kt)("a",{parentName:"p",href:"https://nuke.build/index.html"},"NUKE")," lately, I want to create a solution based on it."),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("a",{parentName:"p",href:"https://nuke.build/index.html"},"NUKE")," is a build automation framework where you define operations as build, test or push NuGets, in a C# project. I found good reviews and some videos in ",(0,l.kt)("a",{parentName:"p",href:"https://channel9.msdn.com/Shows/On-NET/Build-Automation-with-NUKE"},"Channel9")," about it. So, for instance, dotnet commands are predefined methods, and its arguments are extension methods, check the next example:"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"How a NUKE project looks like?"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"Target Pack => _ => _\n    .DependsOn(Clean)\n    .Executes(() => \n    {\n      DotNetTasks\n          .DotNetPack(s => s\n              .SetProject(project.Path)\n              .SetOutputDirectory(outputFolderAbsolutePath)\n              .SetConfiguration(configuration)\n              .SetVersionPrefix(currentPackageVersion)\n              .SetVersionSuffix(versionSuffix)\n              .EnableNoRestore());\n    });\n"))))),(0,l.kt)("h2",{id:"goals"},"Goals"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Validate the commits from a open PR."),(0,l.kt)("li",{parentName:"ul"},"The Solution should be based on NUKE."),(0,l.kt)("li",{parentName:"ul"},"Any repository should be able to use it.")),(0,l.kt)("h2",{id:"approach"},"Approach"),(0,l.kt)("p",null,"cangulo.nuke.prcommitsvalidations will execute the following operations sequentially:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Get the commit list using the GH API Client provided by NUKE"),(0,l.kt)("li",{parentName:"ol"},"Validate they follow the conventions defined in the repo.")),(0,l.kt)("h2",{id:"remarks"},"Remarks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"I'm not saying NUKE is the best solution, I just want to give it a try \ud83d\ude0a. In the future, I will create another solution based on scripts."),(0,l.kt)("li",{parentName:"ul"},"The conventions are defined in a json file, you can extend the next example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "conventionalCommitTypes": [\n        "fix",\n        "minor",\n        "major"\n    ]\n}\n')),(0,l.kt)("h2",{id:"how-to-use-it"},"How to use it?"),(0,l.kt)("p",null,"Please check the examples given ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-actions/cangulo.nuke.prcommitsvalidations#example"},"here"),"."),(0,l.kt)("h2",{id:"where-do-i-use-it"},"Where do I use it?"),(0,l.kt)("p",null,"I call this solution through a specific ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-actions/cangulo.nuke.prcommitsvalidations"},"GH Action")," in the next projects:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/.github/workflows/4-Release-New-Version.yml"},"cangulo-nugets/cangulo.changelog")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets/cangulo.common.testing/blob/v0.0.2/.github/workflows/4-Release-New-Version.yml"},"cangulo-nugets/cangulo.common.testing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations/blob/v0.0.1/.github/workflows/3-Release_New_Version.yml"},"cangulo-nuke/cangulo.nuke.prcommitsvalidations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-actions/cangulo.nuke.prcommitsvalidations/blob/v0.0.1/.github/workflows/2-release_new_version.yml"},"cangulo-actions/cangulo.nuke.prcommitsvalidations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-tf/basic-iac/blob/v0.0.2/.github/workflows/3-Release_New_Version.yml"},"cangulo-tf/basic-iac"))),(0,l.kt)("h2",{id:"repository"},"Repository"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations"},"cangulo.nuke.prcommitsvalidations repository")),(0,l.kt)("h2",{id:"github-action"},"GitHub Action"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-actions/cangulo.nuke.prcommitsvalidations"},"github action to execute in ANY repository")),(0,l.kt)(s.ZP,{mdxType:"AboutMePostArea"}),(0,l.kt)(i.Z,{slug:"projects/cangulo.nuke.prcommitsvalidations",title:"TITLE",tags:["nuke","cicd","commits","conventional-commits"],mdxType:"ShareCard"}),(0,l.kt)(r.Z,{slug:"projects/cangulo.nuke.prcommitsvalidations",mdxType:"Comments"}))}k.isMDXComponent=!0},2680:function(e,t,n){n.d(t,{ZP:function(){return s}});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),i=["components"],r={toc:[{value:"About me",id:"about-me",children:[],level:2}]};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"about-me"},"About me"),(0,l.kt)("p",null,"I'm a Software Engineer at ",(0,l.kt)("a",{parentName:"p",href:"https://ohpen.com"},"Ohpen"),". I have strong experience with dotnet technologies, AWS and Terraform. I have also worked with Front-End languages as JavaScript, Angular and React. I'm a challenge-seeker person , I think all challenges are opportunities to grow. Feel free to contact me via LinkedIn."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/cangulo/cangulo/raw/main/profile_picture_aboutme_post_area.png",alt:"profile image"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Per aspera ad astra.")),(0,l.kt)("p",null,"LinkedIn - ",(0,l.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/angulomascarell"},"Carlos Angulo Mascarell"),(0,l.kt)("br",{parentName:"p"}),"\n","Twitter - ",(0,l.kt)("a",{parentName:"p",href:"https://twitter.com/angulomascarell"},"@AnguloMascarell"),(0,l.kt)("br",{parentName:"p"}),"\n","GitHub - ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo"},"Carlos Angulo Mascarell - cangulo"),(0,l.kt)("br",{parentName:"p"}),"\n","Personal Web Site - ",(0,l.kt)("a",{parentName:"p",href:"https://cangulo.github.io"},"cangulo.github.io")))}s.isMDXComponent=!0},1147:function(e,t,n){var a=n(7294),o=n(5697),l=n.n(o),i=n(2263),r=n(6785);function s(e){var t=e.label,n=e.link,o=e.linkIsRelative,l=(0,i.Z)().siteConfig.customFields.rawGitUrl,s=o?l.concat(n):n;return a.createElement(r.W,{label:t,link:s})}s.propTypes={label:l().string.isRequired,link:l().string.isRequired,linkIsRelative:l().bool.isRequired},t.Z=s},4888:function(e,t,n){var a=n(7294),o=n(4610),l=n(2263);t.Z=function(){var e=(0,l.Z)().siteConfig,t=parseInt(e.customFields.hyvorTalkSiteId);return a.createElement("section",null,a.createElement("h2",null,"Comments"),a.createElement(o.Z.Embed,{loadMode:"scroll",websiteId:t}))}},4473:function(e,t,n){var a=n(7294),o=n(5697),l=n.n(o),i=n(3597),r=n(7332),s=n(6616),u=n(7385),c=n(8137),m=n(6339),p=n(2834),h=n(9275),d=n(8168),g=n(4276),k=n(2263);function v(e){var t=e.slug,n=e.title,o=e.tags,l=(0,k.Z)().siteConfig.url+"/"+t;return a.createElement("div",null,a.createElement("h2",null,"Did you like it? Share It!"),a.createElement(i.Z,{url:l,title:n},a.createElement(r.Z,{size:32,round:!0})),a.createElement(s.Z,{url:l,title:n,via:"AnguloMascarell",hashtags:null!=o?o:""},a.createElement(u.Z,{size:32,round:!0})),a.createElement(c.Z,{subject:"Check this post about "+n,body:"Hi there, check the next post: "+n+" \n\n",url:l},a.createElement(m.Z,{size:32,round:!0})),a.createElement(p.Z,{url:l,title:n},a.createElement(h.Z,{size:32,round:!0})),a.createElement(d.Z,{title:n,url:l},a.createElement(g.Z,{size:32,round:!0})),a.createElement("br",{style:{marginBottom:"15px"}}))}v.propTypes={slug:l().string.isRequired,title:l().string.isRequired,tags:l().array.isRequired},t.Z=v}}]);