"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[2931],{9194:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return h},metadata:function(){return f},assets:function(){return g},toc:function(){return k},default:function(){return v}});var a=n(3117),o=n(102),i=(n(7294),n(3905)),l=n(6785),r=n(6339),s=n(6396),u=n(8215),p=n(3114),c=n(615),m=["components"],d={slug:"bash/4-create-config-repo",title:"How to use a repository for importing your bash scripts and shortcuts",date:new Date("2020-12-17T00:00:00.000Z"),group:"blog",authors:"cangulo",tags:["linux","productivity","hack","bash","zsh","terminal"]},h=void 0,f={permalink:"/blog/bash/4-create-config-repo",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/posts/bash/4-create-config-repo/4-create-config-repo.mdx",source:"@site/blog/posts/bash/4-create-config-repo/4-create-config-repo.mdx",title:"How to use a repository for importing your bash scripts and shortcuts",description:"In this post, I will explain how to load custom variables by reading a JSON file, this will be done every time we open a Terminal. I will also improve the shortcuts we create in the previous posts.",date:"2020-12-17T00:00:00.000Z",formattedDate:"December 17, 2020",tags:[{label:"linux",permalink:"/blog/tags/linux"},{label:"productivity",permalink:"/blog/tags/productivity"},{label:"hack",permalink:"/blog/tags/hack"},{label:"bash",permalink:"/blog/tags/bash"},{label:"zsh",permalink:"/blog/tags/zsh"},{label:"terminal",permalink:"/blog/tags/terminal"}],readingTime:3.425,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],prevItem:{title:"Interactive bookmarks menu v2",permalink:"/blog/bash/5-interactive-bookmarks-v2"},nextItem:{title:"Load custom variables at Terminal startup",permalink:"/blog/bash/3-load-vars"}},g={authorsImageUrls:[void 0]},k=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Notes",id:"notes",children:[],level:2},{value:"Problem",id:"problem",children:[],level:2},{value:"Idea",id:"idea",children:[],level:2},{value:"Implementation",id:"implementation",children:[{value:"load-custom-profile.sh",id:"load-custom-profilesh",children:[],level:3}],level:2},{value:"Demo",id:"demo",children:[],level:2},{value:"Repository",id:"repository",children:[],level:2},{value:"Final Notes",id:"final-notes",children:[],level:2}],b={toc:k};function v(e){var t=e.components,h=(0,o.Z)(e,m);return(0,i.kt)("wrapper",(0,a.Z)({},b,h,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this post, I will explain how to load custom variables by reading a JSON file, this will be done every time we open a Terminal. I will also improve the shortcuts we create in the previous posts."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Template ready to use!")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cangulo-templates/linux-terminal-profile"},"cangulo-templates/linux-terminal-profile")," repository contains a ready-to-use template based on this article."))),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Linux (I'm using ",(0,i.kt)("a",{parentName:"li",href:"https://elementary.io"},"Elementary OS"),", a Ubuntu-based distro, check it!)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://code.visualstudio.com"},"VS Code"),". If you don't want to use it, change all the ",(0,i.kt)("inlineCode",{parentName:"li"},"code")," commands in the bash code for your text editor. Alternatives: ",(0,i.kt)("em",{parentName:"li"},"gedit")," or ",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.gnome.org/GNOME/gnome-text-editor"},"gnome-text-editor"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/junegunn/fzf"},"fzf")," command-line fuzzy finder")),(0,i.kt)("h2",{id:"notes"},"Notes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Remember to add execution permissions to the scripts through ",(0,i.kt)("inlineCode",{parentName:"li"},"chmod +x")),(0,i.kt)("li",{parentName:"ul"},"Profile script: ",(0,i.kt)("inlineCode",{parentName:"li"},"$HOME/.bashrc")," for bash terminal and ",(0,i.kt)("inlineCode",{parentName:"li"},"$HOME/.zshrc")," for zsh ")),(0,i.kt)("h2",{id:"problem"},"Problem"),(0,i.kt)("p",null,"Simplify, as much as possible, the process to set up my shortcuts every time I migrate to a new computer, personal or work. This process is: download and setups all my scripts in the Bash profile."),(0,i.kt)("h2",{id:"idea"},"Idea"),(0,i.kt)("p",null,"Remember the concept ",(0,i.kt)("em",{parentName:"p"},"Behavior vs Configuration")," I explained in my ",(0,i.kt)("a",{parentName:"p",href:"/blog/bash/3-load-vars#behavior-vs-configuration"},"previous post"),"? We are going to continue using it \ud83d\ude01. Let me list down the main points:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Variables are stored in a JSON file. We want those variables to be available during all the terminal sessions."),(0,i.kt)("li",{parentName:"ul"},"Functions depend on those variables, values that could change depending on the PC your use, for example paths, shouldn't be hard-coded."),(0,i.kt)("li",{parentName:"ul"},"Both, variables and functions are added in the Bash Profile.")),(0,i.kt)("p",null,"Nice, now that we have the main points, let me show the implementation."),(0,i.kt)("h2",{id:"implementation"},"Implementation"),(0,i.kt)("p",null,"First, we have the JSON file containing the variables:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"file=./code/1-profile-settings.json",file:"./code/1-profile-settings.json"},'{\n    "LOCAL_REPOS": "/home/cangulo/repos",\n    "LOCAL_DOCUMENTS": "/home/cangulo/Documents",\n    "SCRIPTS_FOLDER": "/home/cangulo/repos/cangulo-blog/cangulo.github.io/blog/posts/bash/4-create-config-repo/code/scripts",\n    "BOOKMARKS_FILE": "/home/cangulo/repos/cangulo-blog/cangulo.github.io/blog/posts/bash/4-create-config-repo/code/2-bookmarks.json"\n}\n')),(0,i.kt)("p",null,"Each JSON key will be an environment variable, I prefer to define them in upper case to differentiate them from other variables we define during the terminal session."),(0,i.kt)("p",null,"Then, in the bash profile we only have to do the next actions:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Export the path to the JSON settings. My convention is to call this variable as ",(0,i.kt)("inlineCode",{parentName:"li"},"SETTINGS_FILE"),"."),(0,i.kt)("li",{parentName:"ol"},"Call a script to load all the variables and functions using the previous settings. Let's call this script ",(0,i.kt)("inlineCode",{parentName:"li"},"load-custom-profile.sh"),".")),(0,i.kt)("p",null,"Next is the code for that. Please append it in your profile."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Update FULL_PATH_TO_JSON_SETTINGS with yours\nexport SETTINGS_FILE="FULL_PATH_TO_JSON_SETTINGS"\nsource FULL_PATH/load-custom-profile.sh\n')),(0,i.kt)("p",null,"Please note we use the ",(0,i.kt)("inlineCode",{parentName:"p"},"export")," keyword, which sets ",(0,i.kt)("inlineCode",{parentName:"p"},"SETTINGS_FILE")," as an environment variable. In that way, it will be available for other scripts. Please check this ",(0,i.kt)("a",{parentName:"p",href:"https://www.baeldung.com/linux/bash-variables-export"},"link")," for more details."),(0,i.kt)("h3",{id:"load-custom-profilesh"},"load-custom-profile.sh"),(0,i.kt)("p",null,"This script should perform the next actions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Verify ",(0,i.kt)("inlineCode",{parentName:"li"},"$SETTINGS_FILE")," is defined and valid:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"String is not empty"),(0,i.kt)("li",{parentName:"ul"},"Path provided exists"))),(0,i.kt)("li",{parentName:"ul"},"Read the JSON file and export the variables. The command is based on ",(0,i.kt)("inlineCode",{parentName:"li"},"jq")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"eval")," as explained in my ",(0,i.kt)("a",{parentName:"li",href:"/blog/bash/3-load-vars"},"previous post")," for more details. The main difference now is the use of the ",(0,i.kt)("inlineCode",{parentName:"li"},"export")," command, following the pattern: ",(0,i.kt)("inlineCode",{parentName:"li"},"export KEY='VALUE'"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/load-custom-profile.sh",file:"./code/load-custom-profile.sh"},'#!/bin/bash\n\n# verify $SETTINGS_FILE is empty\nif [[ -z "$SETTINGS_FILE" ]]; then\n    echo "no SETTINGS_FILE provided"\n    return -1\nfi\n\n# verify the path at $SETTINGS_FILE exists\nif [ ! -f $SETTINGS_FILE ]; then\n    echo "SETTINGS_FILE path does not exists"\n    return -1\nfi\n\n# export variables\nfor command in "$(jq -r \'to_entries | .[] | "export " + .key + "=" + (.value | @sh) \' <$SETTINGS_FILE)"; do\n    eval $command\ndone\n\n# source functions and aliases\nfor i in $SCRIPTS_FOLDER/*.sh; do source "$i"; done\n\n# List the bookmarks when opening the terminal\nlistBookmarks\n')),(0,i.kt)("p",null,"Next are the scripts stored in ",(0,i.kt)("inlineCode",{parentName:"p"},"$SCRIPTS_FOLDER"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"aliases:")),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(u.Z,{value:"bash",label:"bash",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/scripts/aliases-bash.sh",file:"./code/scripts/aliases-bash.sh"},'#!/bin/bash\n\nalias tf="terraform"\nalias goToRepos="cd $LOCAL_REPOS"\nalias goToDocs="cd $LOCAL_DOCUMENTS"\nalias editAwsCredentials="code $HOME/.aws"\nalias editBashProfile="code $HOME/.bashrc"\n')),(0,i.kt)(l.CaptionDocusaurus,{label:"aliases-bash.sh",linkIsRelative:!0,link:"posts/bash/4-create-config-repo/code/scripts/aliases-bash.sh",mdxType:"CaptionDocusaurus"})),(0,i.kt)(u.Z,{value:"zsh",label:"zsh",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/scripts/aliases-zsh.sh",file:"./code/scripts/aliases-zsh.sh"},'#!/bin/bash\n\nalias tf="terraform"\nalias goToRepos="cd $LOCAL_REPOS"\nalias goToDocs="cd $LOCAL_DOCUMENTS"\nalias editAwsCredentials="code $HOME/.aws"\nalias editZshProfile="code $HOME/.zshrc"\n')),(0,i.kt)(l.CaptionDocusaurus,{label:"aliases-zsh.sh",linkIsRelative:!0,link:"posts/bash/4-create-config-repo/code/scripts/aliases-zsh.sh",mdxType:"CaptionDocusaurus"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"functions:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/scripts/functions.sh",file:"./code/scripts/functions.sh"},'#!/bin/bash\n\nlistBookmarks() {\n    local pathSelected=$(cat $BOOKMARKS_FILE |\n        jq -r \'.[]\' |\n        fzf)\n\n    if [[ -n "$pathSelected" ]]; then\n        cd $pathSelected\n    else\n        echo "no bookmark selected"\n    fi\n}\n\nopenRepoUrl() {\n    local gitUrl=$(git remote get-url --all origin)\n    local repoUrl="${gitUrl%".git"}" # Removing .git prefix\n    if [[ -n "$repoUrl" ]]; then\n        echo "repoUrl:$repoUrl"\n        xdg-open $repoUrl\n    fi\n}\n\n# REQUIRES fzf, this list the current folder interactively\n\nlsf() {\n    local chosenDir=$(ls | fzf)\n    if [[ -n "$chosenDir" ]]; then\n        cd $chosenDir\n    fi\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Bookmarks file referenced in the variable ",(0,i.kt)("inlineCode",{parentName:"li"},"BOOKMARKS_FILE")," , and used in the ",(0,i.kt)("inlineCode",{parentName:"li"},"listBookmarks"),"  function:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"file=./code/2-bookmarks.json",file:"./code/2-bookmarks.json"},'[\n    "/home/cangulo/repos/cangulo-tf",\n    "/home/cangulo/repos/cangulo-nuke"\n]\n')),(0,i.kt)("h2",{id:"demo"},"Demo"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"demo",src:n(9431).Z})),(0,i.kt)("h2",{id:"repository"},"Repository"),(0,i.kt)("p",null,"If we store the settings and the implementations in a repository (e.g. GitHub) , we just need to reference them in the profile script the same way we have done so far:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Update LOCAL_REPO_FULL_PATH with yours\nexport SETTINGS_FILE="LOCAL_REPO_FULL_PATH/settings.local.json"\nsource LOCAL_REPO_FULL_PATH/load-custom-profile.sh\n')),(0,i.kt)("p",null,"I recommend you to have a ",(0,i.kt)("inlineCode",{parentName:"p"},"settings.template.json")," with the empty variables as next:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"file=./code/3-profile-settings.template.json",file:"./code/3-profile-settings.template.json"},'{\n    "LOCAL_REPOS": "",\n    "LOCAL_DOCUMENTS": "",\n    "SCRIPTS_FOLDER": "",\n    "BOOKMARKS_FILE": ""\n}\n')),(0,i.kt)("p",null,"In that way, when you clone the repo locally, you duplicate it, rename copy to ",(0,i.kt)("inlineCode",{parentName:"p"},"settings.local.json"),", and fill the values. Add it to your ",(0,i.kt)("inlineCode",{parentName:"p"},"gitignore")," to avoid pushing it."),(0,i.kt)("h2",{id:"final-notes"},"Final Notes"),(0,i.kt)("p",null,"wow, this post is the longest one I have done so far! Do you have another approach for importing scripts or settings? How would you do it? Let me know in the comments below."),(0,i.kt)(r.Z,{id:"d3mlE7uhX8KFgEmY",mdxType:"Gif"}),(0,i.kt)(p.ZP,{mdxType:"AboutMe"}),(0,i.kt)(l.ShareDocusaurus,{preSlug:d.group,slug:d.slug,title:d.title,tags:d.tags,mdxType:"ShareDocusaurus"}),(0,i.kt)(c.Z,{mdxType:"Comments"}))}v.isMDXComponent=!0},3114:function(e,t,n){n.d(t,{ZP:function(){return s}});var a=n(3117),o=n(102),i=(n(7294),n(3905)),l=["components"],r={toc:[{value:"About me",id:"about-me",children:[{value:"Experience",id:"experience",children:[],level:3},{value:"Personal Projects:",id:"personal-projects",children:[],level:3}],level:2}]};function s(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"about-me"},"About me"),(0,i.kt)("p",null,"I'm a Software Engineer with experience as Developer and DevOps. I define myself as a challenge-seeker person and team player. I simply give it all to deliver high-quality solutions. On the other hand, I like to analyze and improve processes, promote ",(0,i.kt)("a",{parentName:"p",href:"https://cangulo.github.io/blog/tags/productivity"},"productivity")," and ",(0,i.kt)("a",{parentName:"p",href:"https://cangulo.github.io/meetups/vscode-for-documentation"},"document implementations")," (yes, I'm a developer that likes to document \ud83e\uddd1\u200d\ud83d\udcbb). Feel free to contact me via LinkedIn."),(0,i.kt)("h3",{id:"experience"},"Experience"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C# (BE developer), Terraform (IaC), Bash and Powershell scripts "),(0,i.kt)("li",{parentName:"ul"},"AWS (AWS Developer Associate Certified ) and Azure"),(0,i.kt)("li",{parentName:"ul"},"DevOps: Bitbucket Pipelines and GitHub Actions for Continuous Integration and Deployment. "),(0,i.kt)("li",{parentName:"ul"},"NUKE for implementing release processes, also done using Bash scripts")),(0,i.kt)("h3",{id:"personal-projects"},"Personal Projects:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cangulo.github.io"},"Personal Blog")," (react, docusaurus)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets"},"Nuget Packages")),(0,i.kt)("li",{parentName:"ul"},"Projects for CICD:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator"},"cangulo.nuke.releasecreator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations"},"cangulo.nuke.prcommitsvalidations")))),(0,i.kt)("li",{parentName:"ul"},"GH Actions: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/cangulo-actions"},"cangulo-actions")),(0,i.kt)("li",{parentName:"ul"},"npm packages: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/cangulo/blog-components"},"blog-components")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cangulo.github.io/projects/"},"Full List"))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/cangulo/cangulo/raw/main/profile_picture_aboutme_post_area.png",alt:"profile image"})),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Per aspera ad astra.")),(0,i.kt)("p",null,"LinkedIn - ",(0,i.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/angulomascarell"},"Carlos Angulo Mascarell"),(0,i.kt)("br",{parentName:"p"}),"\n","Twitter - ",(0,i.kt)("a",{parentName:"p",href:"https://twitter.com/angulomascarell"},"@AnguloMascarell"),(0,i.kt)("br",{parentName:"p"}),"\n","GitHub - ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cangulo"},"Carlos Angulo Mascarell - cangulo"),(0,i.kt)("br",{parentName:"p"}),"\n","Personal Blog - ",(0,i.kt)("a",{parentName:"p",href:"https://cangulo.github.io"},"cangulo.github.io")))}s.isMDXComponent=!0},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(3117),o=n(7294),i=n(2389),l=n(9443);var r=function(){var e=(0,o.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(3810),u=n(6010),p="tabItem_1uMI";function c(e){var t,n,a,i=e.lazy,l=e.block,c=e.defaultValue,m=e.values,d=e.groupId,h=e.className,f=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),k=(0,s.lx)(g,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===c?c:null!=(t=null!=c?c:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=f[0])?void 0:a.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=r(),N=v.tabGroupChoices,y=v.setTabGroupChoices,w=(0,o.useState)(b),E=w[0],T=w[1],I=[],S=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var _=N[d];null!=_&&_!==E&&g.some((function(e){return e.value===_}))&&T(_)}var C=function(e){var t=e.currentTarget,n=I.indexOf(t),a=g[n].value;a!==E&&(S(t),T(a),null!=d&&y(d,a))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=I.indexOf(e.currentTarget)+1;n=I[a]||I[0];break;case"ArrowLeft":var o=I.indexOf(e.currentTarget)-1;n=I[o]||I[I.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":l},h)},g.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,className:(0,u.Z)("tabs__item",p,{"tabs__item--active":E===t}),key:t,ref:function(e){return I.push(e)},onKeyDown:O,onFocus:C,onClick:C},null!=n?n:t)}))),i?(0,o.cloneElement)(f.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function m(e){var t=(0,i.Z)();return o.createElement(c,(0,a.Z)({key:String(t)},e))}},615:function(e,t,n){n.d(t,{Z:function(){return g}});var a=n(7294),o=n(5697),i=n.n(o);function l(e,t){var n=document.createElement("script");n.src=e,n.id=t,document.body.appendChild(n)}function r(e){var t=document.getElementById(e);e&&t.parentElement.removeChild(t)}var s=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},u=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),p=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},c=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},m=function(e){function t(){return s(this,t),c(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return p(t,e),u(t,[{key:"setVariables",value:function(){window.HYVOR_TALK_WEBSITE=this.props.websiteId,window.HYVOR_TALK_CONFIG={url:this.props.url||!1,id:this.props.id||!1,title:this.props.title||document.title,loadMode:this.props.loadMode||"default",language:this.props.language||null,sso:this.props.sso||null,palette:this.props.palette||null}}},{key:"addScript",value:function(){document.getElementById("ht-embed-script")&&r("ht-embed-script"),l("//talk.hyvor.com/web-api/embed","ht-embed-script")}},{key:"componentDidMount",value:function(){this.setVariables(),this.addScript()}},{key:"render",value:function(){return a.createElement("div",{id:"hyvor-talk-view"})}}]),t}(a.Component);m.propTypes={websiteId:i().number.isRequired,url:i().any,id:i().any,title:i().string,loadMode:i().any,language:i().string,sso:i().object,palette:i().object};var d=function(e){function t(){return s(this,t),c(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return p(t,e),u(t,[{key:"setVariables",value:function(){this.props.websiteId&&(window.HYVOR_TALK_WEBSITE=this.props.websiteId)}},{key:"componentDidMount",value:function(){this.setVariables();var e="ht-comment-count-script";document.getElementById(e)&&r(e),l("//talk.hyvor.com/web-api/count/",e)}},{key:"render",value:function(){return a.createElement("span",{"data-talk-id":this.props.id,"data-talk-mode":this.props.mode||"default"})}}]),t}(a.Component);d.propTypes={id:i().any,mode:i().any,websiteId:i().number};var h={Embed:m,CommentCount:d},f=n(2263),g=function(){var e=(0,f.default)().siteConfig,t=parseInt(e.customFields.hyvorTalkSiteId);return a.createElement("section",null,a.createElement("h2",null,"Comments"),a.createElement(h.Embed,{loadMode:"scroll",websiteId:t}))}},6339:function(e,t,n){var a=n(7294),o=n(5697),i=n.n(o);function l(e){var t=e.id;return a.createElement("div",{style:{textAlign:"center"}},a.createElement("iframe",{src:"https://giphy.com/embed/"+t,width:"480",height:"270",frameBorder:"0",className:"giphy-embed",scrolling:"no"}),a.createElement("p",null,a.createElement("a",{href:"https://giphy.com/gifs/"+t},"via GIPHY")))}l.propTypes={id:i().string.isRequired},t.Z=l},9431:function(e,t,n){t.Z=n.p+"assets/images/demo-4846f054a3262bfa047b5dfc23ae089c.gif"}}]);