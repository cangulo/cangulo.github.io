"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[8748],{368:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"developer","metadata":{"permalink":"/values/developer","editUrl":"https://github.com/cangulo/cangulo.github.io/blob/main/blog/values/developer/index.mdx","source":"@site/blog/values/developer/index.mdx","title":"some points about being developer","description":"What does it mean to be a developer?","date":"2021-12-09T01:38:13.585Z","formattedDate":"December 9, 2021","tags":[{"label":"devops","permalink":"/values/tags/devops"},{"label":"deployment","permalink":"/values/tags/deployment"},{"label":"deliver","permalink":"/values/tags/deliver"},{"label":"cicd","permalink":"/values/tags/cicd"}],"readingTime":1.375,"truncated":true,"authors":[{"name":"Carlos Angulo Mascarell","title":"Software Engineer","url":"https://github.com/cangulo","imageURL":"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png","key":"cangulo"}],"nextItem":{"title":"What is documentation ?","permalink":"/values/documentation"}},"content":"import ShareCard from \'/src/components/blog/share.js\'\\nimport Comments from \'/src/components/blog/comments.js\'\\nimport AboutMePostArea from \'/src/mdx_components/aboutme_area.mdx\'\\n\\n\x3c!--truncate--\x3e\\n\\n## What does it mean to be a developer?\\nFirst, the definition should include \\"code\\", if you don\'t know how to code, you can\'t implement solutions. Clear, but what else? Let\'s focus on the `implement` word, a developer should implement the best solution, in **quality** terms, but given some **circumstances**. It is not the same develop a hotfix for production than a feature on a normal weekly basis.\\n\\nNice, so a developer implements solutions given some circumstances. Wait, what about the solution consumer? it will be delivered to someone, let\'s say it is a client, so, this solution should have some **value** for them. Okay, in summary:\\n\\n:::info my definition of a Developer\\nA person that creates value for a client by implementing a solution, taking into account the requirements and the circumstances.\\n:::\\n\\nThen, can a developer propose a solution? yes, but if your work is more to propose than to implement, maybe you are an `architect` \ud83d\ude1c.\\n\\n## Quality vs Deadline?\\n\\nQuality vs Deadline? yeah, that is a big question, and the answer, for me, is composed of two words: **balance** and **circumstances**. \\nA developer should always aim for the best quality, without over-engineering the solution, but also taking into account the deadlines. When you have an issue that requires a quick fix, you should work on solving the issue, not into improving the software, the main goal is fixing the area that is failing. Any improvement should be included as a normal feature. \\n\\n<AboutMePostArea/>\\n\\n<ShareCard \\n  slug=\\"values/developer\\" \\n  title=\\"What I have learn as Developer\\" \\n  tags={[\\"developer\\", \\"experience\\", \\"thoughts\\"]} />\\n\\n<Comments\\n  slug=\\"values/developer\\"  />"},{"id":"documentation","metadata":{"permalink":"/values/documentation","editUrl":"https://github.com/cangulo/cangulo.github.io/blob/main/blog/values/documentation-hero/index.mdx","source":"@site/blog/values/documentation-hero/index.mdx","title":"What is documentation ?","description":"To document - Definition","date":"2021-12-09T01:38:13.585Z","formattedDate":"December 9, 2021","tags":[{"label":"documentation","permalink":"/values/tags/documentation"},{"label":"docs","permalink":"/values/tags/docs"}],"readingTime":1.23,"truncated":true,"authors":[{"name":"Carlos Angulo Mascarell","title":"Software Engineer","url":"https://github.com/cangulo","imageURL":"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png","key":"cangulo"}],"prevItem":{"title":"some points about being developer","permalink":"/values/developer"}},"content":"import ShareCard from \'/src/components/blog/share.js\'\\nimport Comments from \'/src/components/blog/comments.js\'\\nimport AboutMePostArea from \'/src/mdx_components/aboutme_area.mdx\'\\n\\n\x3c!--truncate--\x3e\\n\\n### To document - Definition\\n\\nLet\'s make something clear, **to document is not to add comments to your code**. It means, explaining the next point regarding any important development you have done:\\n\\n* Input -> what we expect\\n* Output -> what we should return\\n* Middle steps -> what we do with the input in order to produce an output\\n* Different scenarios -> The different paths we took when producing the output\\n* Technical approach decided and the reasons for it -> answer to a future developer which is reading your code or checking the solution, why you took that approach.\\n\\nIt seems a lot but it isn\'t, you don\'t to have to write the bible but you have to write the essential to ensure anyone that joins could understand the feature. You want more arguments? Good documentation saves you calls and reduce person dependencies.\\n\\n:::note **Do you know this programming saying?**  \\nAlways code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.\\n:::\\n\\nRegarding documentation, I prefer to adapt it as next:\\n\\n:::tip \\nAlways document as if the guy who will fix a bug in productions is YOU one year later. Try to make your life easier!\\n:::\\n\\nLet\'s take the next advice from He-man:\\n\\n![he-man avice](./he-man-advice.jpg)\\n\\n\\n\\n<AboutMePostArea/>\\n\\n<ShareCard \\n  slug=\\"cheatsheets/git\\" \\n  title=\\"Git Cheatsheet\\" \\n  tags={[\\"git\\", \\"githooks\\", \\"alias\\"]} />\\n\\n<Comments\\n  slug=\\"cheatsheets/git\\"  />"}]}')}}]);