"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[2644],{7838:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return k},metadata:function(){return h},assets:function(){return g},toc:function(){return f},default:function(){return N}});var a=n(83117),o=n(80102),l=(n(67294),n(3905)),i=n(64888),r=n(46785),s=n(59750),m=n(9741),c=n(38705),p=n(46339),u=["components"],d={slug:"bash/5-interactive-bookmarks-v2",title:"Interactive bookmarks menu v2",date:new Date("2020-12-21T00:00:00.000Z"),group:"blog",authors:"cangulo",tags:["linux","productivity","hack","bash","zsh","terminal"]},k=void 0,h={permalink:"/blog/bash/5-interactive-bookmarks-v2",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/posts/bash/5-interactive-bookmarks-v2/5-interactive-bookmarks-v2.mdx",source:"@site/blog/posts/bash/5-interactive-bookmarks-v2/5-interactive-bookmarks-v2.mdx",title:"Interactive bookmarks menu v2",description:"In this post, I am going to improve the interactive bookmark I created in a previous post.",date:"2020-12-21T00:00:00.000Z",formattedDate:"December 21, 2020",tags:[{label:"linux",permalink:"/blog/tags/linux"},{label:"productivity",permalink:"/blog/tags/productivity"},{label:"hack",permalink:"/blog/tags/hack"},{label:"bash",permalink:"/blog/tags/bash"},{label:"zsh",permalink:"/blog/tags/zsh"},{label:"terminal",permalink:"/blog/tags/terminal"}],readingTime:3.45,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],prevItem:{title:"AWS Control Tower - Reducing Cost 1",permalink:"/blog/aws/control-tower/1-delete-vpc-endpoints-and-nat"},nextItem:{title:"How to use a repository for importing your bash scripts and shortcuts",permalink:"/blog/bash/4-create-config-repo"}},g={authorsImageUrls:[void 0]},f=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Improvements introduced",id:"improvements-introduced",children:[{value:"Add one directory layer",id:"add-one-directory-layer",children:[],level:3},{value:"Open VS Code in the repository",id:"open-vs-code-in-the-repository",children:[],level:3},{value:"Demo",id:"demo",children:[],level:3}],level:2},{value:"Implementation",id:"implementation",children:[],level:2},{value:"Adding this to your Terminal Profile",id:"adding-this-to-your-terminal-profile",children:[],level:2},{value:"lsf function",id:"lsf-function",children:[],level:2},{value:"Final Notes",id:"final-notes",children:[],level:2}],b={toc:f};function N(e){var t=e.components,k=(0,o.Z)(e,u);return(0,l.kt)("wrapper",(0,a.Z)({},b,k,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In this post, I am going to improve the interactive bookmark I created in a ",(0,l.kt)("a",{parentName:"p",href:"/blog/bash/1-interactive-bookmarks"},"previous post"),"."),(0,l.kt)("h2",{id:"requirements"},"Requirements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Linux (I'm using ",(0,l.kt)("a",{parentName:"li",href:"https://elementary.io"},"Elementary OS"),", a Ubuntu-based distro, try it!)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/junegunn/fzf"},"fzf")," command-line fuzzy finder"),(0,l.kt)("li",{parentName:"ul"},"Remember to add execution permissions to the scripts through ",(0,l.kt)("inlineCode",{parentName:"li"},"chmod +x")),(0,l.kt)("li",{parentName:"ul"},"This article improves the interactive bookmark menu implemented in the previous post: ",(0,l.kt)("a",{parentName:"li",href:"/blog/bash/1-interactive-bookmarks"},(0,l.kt)("em",{parentName:"a"},"Create an interactive bookmarks menu in your terminal")))),(0,l.kt)("h2",{id:"improvements-introduced"},"Improvements introduced"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Add one directory layer"),(0,l.kt)("li",{parentName:"ol"},"Open VS Code in the repository")),(0,l.kt)("h3",{id:"add-one-directory-layer"},"Add one directory layer"),(0,l.kt)("p",null,"I have a global path for all the repositories I clone locally, it is ",(0,l.kt)("inlineCode",{parentName:"p"},"/home/cangulo/repos"),". As I have a lot, I grouped them into folders per organization or custom name."),(0,l.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Organization/ custom name"),(0,l.kt)("th",{parentName:"tr",align:null},"Repository"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cangulo-actions"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.nuke.prcommitsvalidations")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cangulo-actions"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.nuke.releasecreator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cangulo-actions"),(0,l.kt)("td",{parentName:"tr",align:null},"workflows")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cangulo-nugets"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.changelog")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cangulo-nugets"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.changelog.github.io")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"cangulo-nugets"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.common.testing")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"old-projects"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.build")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"old-projects"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.cicd")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"old-projects"),(0,l.kt)("td",{parentName:"tr",align:null},"cangulo.cicd-gh-action")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"temps"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"any temporary repository")))))),(0,l.kt)("p",null,"The ",(0,l.kt)("em",{parentName:"p"},"organization / custom name")," will be the first layer, while the repositories are the second one. Next is the folder structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\u251c\u2500\u2500 cangulo-actions\n\u2502\xa0\xa0 \u251c\u2500\u2500 cangulo.nuke.prcommitsvalidations\n\u2502\xa0\xa0 \u251c\u2500\u2500 cangulo.nuke.releasecreator\n\u2502\xa0\xa0 \u2514\u2500\u2500 workflows\n\u251c\u2500\u2500 cangulo-nugets\n\u2502\xa0\xa0 \u251c\u2500\u2500 cangulo.changelog\n\u2502\xa0\xa0 \u251c\u2500\u2500 cangulo.changelog.github.io\n\u2502\xa0\xa0 \u2514\u2500\u2500 cangulo.common.testing\n\u251c\u2500\u2500 old-projects\n\u2502\xa0\xa0 \u251c\u2500\u2500 cangulo.build\n\u2502\xa0\xa0 \u251c\u2500\u2500 cangulo.cicd\n\u2502\xa0\xa0 \u2514\u2500\u2500 cangulo.cicd-gh-action\n\u2514\u2500\u2500 temp\n    \u251c\u2500\u2500 dotnet-docker\n    \u2514\u2500\u2500 gsd\n")),(0,l.kt)("h3",{id:"open-vs-code-in-the-repository"},"Open VS Code in the repository"),(0,l.kt)("p",null,"Once I choose a repository, I would like to open it using VS Code. "),(0,l.kt)("h3",{id:"demo"},"Demo"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"goal",src:n(34708).Z})),(0,l.kt)("h2",{id:"implementation"},"Implementation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/listbookmarks.sh#L3- {4-7,12-17}",file:"./code/listbookmarks.sh#L3-","{4-7,12-17}":!0},'listBookmarks() {\n    local selectedBookmark=$(\n        cat $BOOKMARKS_FILE |\n            jq -r \'["NAME", "PATH"], (.[] |\n            [.name,.path]) |\n            @tsv\' |\n            column -t |\n            fzf --tac\n    )\n\n    if [[ -n $selectedBookmark ]]; then\n        local bookmarkPath=$(\n            echo $selectedBookmark |\n                tr -s \' \' |\n                cut -f2 -d \' \'\n        )\n        cd $bookmarkPath\n        lsf "code"\n    else\n        cd $LOCAL_REPOS\n    fi\n}\nexport listBookmarks\n\nlsf() {\n    local command=$1\n\n    local chosenDir=$(ls | fzf)\n    if [[ -n $chosenDir ]]; then\n        cd $chosenDir\n        if [[ -n $command ]]; then\n            eval "\\$command ."\n        fi\n    fi\n}\nexport lsf\n')),(0,l.kt)(r.CaptionDocusaurus,{label:"listBookmarks function",linkIsRelative:!0,link:"posts/bash/5-interactive-bookmarks-v2/code/listbookmarks.sh",mdxType:"CaptionDocusaurus"}),(0,l.kt)("p",null,"Let me write down the changes introduced:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Bookmarks now have two properties: ",(0,l.kt)("em",{parentName:"li"},"name")," and ",(0,l.kt)("em",{parentName:"li"},"path"),". ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"file=code/bookmarks.json#L3-L6",file:"code/bookmarks.json#L3-L6"},'    {\n        "name": "Actions",\n        "path": "/home/cangulo/repos/cangulo-actions"\n    },\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"name: string to identify the organization / custom name folder. Without spaces. e.g. for cangulo-actions -> Actions"),(0,l.kt)("li",{parentName:"ul"},"path: full path to first layer directories mentioned before.")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Full Bookmark file"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:"file=code/bookmarks.json",file:"code/bookmarks.json"},'[\n\n    {\n        "name": "Actions",\n        "path": "/home/cangulo/repos/cangulo-actions"\n    },\n    {\n        "name": "Nugets",\n        "path": "/home/cangulo/repos/cangulo-nugets"\n    },\n    {\n        "name": "oldprojects",\n        "path": "/home/cangulo/repos/old-projects"\n    },\n    {\n        "name": "temp",\n        "path": "/home/cangulo/repos/temp"\n    }\n]\n')),(0,l.kt)(r.CaptionDocusaurus,{label:"bookmarks",linkIsRelative:!0,link:"posts/bash/5-interactive-bookmarks-v2/code/bookmarks.json",mdxType:"CaptionDocusaurus"})),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"The path to the bookmarks file is set in the environment variable ",(0,l.kt)("inlineCode",{parentName:"li"},"$BOOKMARKS_FILE"),". We don't have it hardcoded in the function.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/listbookmarks.sh#L5 {1}",file:"./code/listbookmarks.sh#L5","{1}":!0},"        cat $BOOKMARKS_FILE |\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"I now use ",(0,l.kt)("inlineCode",{parentName:"li"},"jq")," to query both attributes ",(0,l.kt)("inlineCode",{parentName:"li"},"(.[] | [.name,.path])")," and output them in the columns ",(0,l.kt)("inlineCode",{parentName:"li"},'["NAME", "PATH"]'),"  as a tab-separated-value ",(0,l.kt)("inlineCode",{parentName:"li"},"@tsv"),":")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/listbookmarks.sh#L5-L8",file:"./code/listbookmarks.sh#L5-L8"},'        cat $BOOKMARKS_FILE |\n            jq -r \'["NAME", "PATH"], (.[] |\n            [.name,.path]) |\n            @tsv\' |\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"jq-updated",src:n(17100).Z})),(0,l.kt)("p",null,"Problem: columns are not aligned (see ",(0,l.kt)("em",{parentName:"p"},"oldprojects")," row)"),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"In order to align the ",(0,l.kt)("inlineCode",{parentName:"li"},"jq")," output before piping it to ",(0,l.kt)("inlineCode",{parentName:"li"},"fzf"),", I use the ",(0,l.kt)("inlineCode",{parentName:"li"},"column -t")," command. ",(0,l.kt)("a",{parentName:"li",href:"https://linux.die.net/man/1/column"},"Reference"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/listbookmarks.sh#L5-L10 {5}",file:"./code/listbookmarks.sh#L5-L10","{5}":!0},'        cat $BOOKMARKS_FILE |\n            jq -r \'["NAME", "PATH"], (.[] |\n            [.name,.path]) |\n            @tsv\' |\n            column -t |\n            fzf --tac\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"column",src:n(73972).Z})),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"Once a bookmark is selected, the full row is returned. I")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"fzf_return_full_row",src:n(81767).Z})),(0,l.kt)("p",null,"Then, I have to extract the path. First, I delete the repeated spaces (",(0,l.kt)("inlineCode",{parentName:"p"},"tr -s ' '"),"). Secondly, I choose the second column(",(0,l.kt)("inlineCode",{parentName:"p"},"cut -f2 -d ' '"),"). The ",(0,l.kt)("inlineCode",{parentName:"p"},"-d ' '")," parameter is to set columns delimiter to a whitespace."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"trim-selection",src:n(54141).Z})),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"I have created the function ",(0,l.kt)("inlineCode",{parentName:"li"},"lsf")," to list the current directories using ",(0,l.kt)("inlineCode",{parentName:"li"},"fzf"),", navigate to the one selected and execute a command provided as first parameter ",(0,l.kt)("inlineCode",{parentName:"li"},"$1"),". In our case ",(0,l.kt)("inlineCode",{parentName:"li"},"code"),". ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"file=./code/listbookmarks.sh#L27-L37 {8}",file:"./code/listbookmarks.sh#L27-L37","{8}":!0},'lsf() {\n    local command=$1\n\n    local chosenDir=$(ls | fzf)\n    if [[ -n $chosenDir ]]; then\n        cd $chosenDir\n        if [[ -n $command ]]; then\n            eval "\\$command ."\n        fi\n    fi\n}\n')),(0,l.kt)("p",null,"Please note the ",(0,l.kt)("inlineCode",{parentName:"p"},' eval "\\$command ."')," statement for executing the command provided."),(0,l.kt)("h2",{id:"adding-this-to-your-terminal-profile"},"Adding this to your Terminal Profile"),(0,l.kt)("p",null,"You can add this into your Bash / Zsh profile. You can follow the next steps:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Define your bookmarks in a json file following the ",(0,l.kt)("em",{parentName:"li"},"name,path")," model"),(0,l.kt)("li",{parentName:"ol"},"In your profile, append its path in the ",(0,l.kt)("inlineCode",{parentName:"li"},"$BOOKMARKS_FILE")," variable"),(0,l.kt)("li",{parentName:"ol"},"Append the functions ",(0,l.kt)("inlineCode",{parentName:"li"},"listBookmarks")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"lsf"),"."),(0,l.kt)("li",{parentName:"ol"},"Append a call to the ",(0,l.kt)("inlineCode",{parentName:"li"},"listBookmarks")," function at the end of the profile, so every time you open a terminal it execute it. ")),(0,l.kt)("h2",{id:"lsf-function"},"lsf function"),(0,l.kt)("p",null,"I just want to mention you can use the  ",(0,l.kt)("inlineCode",{parentName:"p"},"lsf")," function separately to make navigation through directories faster. Also, remember it accepts as a parameter a command to execute in the directory selected. Give it a try and add import it in your profile."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"lsf_faster_navigation",src:n(48353).Z})),(0,l.kt)("h2",{id:"final-notes"},"Final Notes"),(0,l.kt)("p",null,"Do you see any other improvement to include? What commands would you provide when using ",(0,l.kt)("inlineCode",{parentName:"p"},"lsf")," ? Share them in the comments below."),(0,l.kt)(p.Z,{id:"UtEUhkfriklonVdweC",mdxType:"Gif"}),(0,l.kt)(c.ZP,{mdxType:"AboutMe"}),(0,l.kt)(m.ZP,{mdxType:"FullExperienceLink"}),(0,l.kt)(s.ZP,{mdxType:"Contact"}),(0,l.kt)(r.ShareDocusaurus,{preSlug:d.group,slug:d.slug,title:d.title,tags:d.tags,mdxType:"ShareDocusaurus"}),(0,l.kt)(i.Z,{mdxType:"Comments"}))}N.isMDXComponent=!0},64888:function(e,t,n){var a=n(67294),o=n(84610),l=n(52263);t.Z=function(){var e=(0,l.default)().siteConfig,t=parseInt(e.customFields.hyvorTalkSiteId);return a.createElement("section",null,a.createElement("h2",null,"Comments"),a.createElement(o.Z.Embed,{loadMode:"scroll",websiteId:t}))}},46339:function(e,t,n){var a=n(67294),o=n(45697),l=n.n(o);function i(e){var t=e.id;return a.createElement("div",{style:{textAlign:"center"}},a.createElement("iframe",{src:"https://giphy.com/embed/"+t,width:"480",height:"270",frameBorder:"0",className:"giphy-embed",scrolling:"no"}),a.createElement("p",null,a.createElement("a",{href:"https://giphy.com/gifs/"+t},"via GIPHY")))}i.propTypes={id:l().string.isRequired},t.Z=i},73972:function(e,t,n){t.Z=n.p+"assets/images/column-20bd845e25e331a9d4ff2e1072fbe15c.png"},81767:function(e,t,n){t.Z=n.p+"assets/images/fzf_return_full_row-ed55360d59dadc34d92ea1579b57b340.gif"},34708:function(e,t,n){t.Z=n.p+"assets/images/goal-6d970d897deb12fcbd637cfeaba9bdd7.gif"},17100:function(e,t,n){t.Z=n.p+"assets/images/jq-updated-a955745f8503cb3977a0a01ec3d51f31.png"},48353:function(e,t,n){t.Z=n.p+"assets/images/lsf_faster_navigation-1ce15a19be1c71d2e3a5539c5aa1ab96.gif"},54141:function(e,t,n){t.Z=n.p+"assets/images/trim-selection-e61ea24f3b30327f1a31439743a795c3.png"}}]);