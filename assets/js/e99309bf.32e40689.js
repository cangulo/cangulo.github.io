"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[5762],{386:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"cangulo.changelog","metadata":{"permalink":"/projects/cangulo.changelog","editUrl":"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nugets/cangulo.changelog/index.md","source":"@site/blog/projects/nugets/cangulo.changelog/index.md","title":"cangulo.changelog - idea and usage","description":"This is my second post explaining my CICD tools. In this case I\'m going to explain how I use my cangulo.changelog nuget package to update my repos changelog. You can use it in any C# console project. I am going to refer to the cangulo.nuke.releasecreator project explained in the previous post.","date":"2021-11-26T00:00:00.000Z","formattedDate":"November 26, 2021","tags":[{"label":"nuke","permalink":"/projects/tags/nuke"},{"label":"cicd","permalink":"/projects/tags/cicd"},{"label":"conventional_commits","permalink":"/projects/tags/conventional-commits"}],"readingTime":4.57,"truncated":true,"authors":[{"name":"Carlos Angulo Mascarell","title":"Software Engineer","url":"https://github.com/cangulo","imageURL":"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png","key":"cangulo"}],"nextItem":{"title":"cangulo.nuke.releasecreator","permalink":"/projects/cangulo.nuke.releasecreator"}},"content":"import ShareCard from \'/src/components/blog/share.js\'\\nimport Caption from \'/src/components/blog/caption.jsx\'\\nimport Comments from \'/src/components/blog/comments.js\'\\nimport AboutMePostArea from \'/src/mdx_components/aboutme_area.mdx\'\\nimport BrowserWindow from \'/src/components/BrowserWindow\'\\nimport Tabs from \'@theme/Tabs\'\\nimport TabItem from \'@theme/TabItem\'\\n\\nThis is my second post explaining my CICD tools. In this case I\'m going to explain how I use my cangulo.changelog nuget package to update my repos changelog. You can use it in any C# console project. I am going to refer to the [cangulo.nuke.releasecreator](https://github.com/cangulo-nuke/cangulo.nuke.releasecreator) project explained in the previous [post](../../nuke/cangulo.nuke.releasecreator/index.mdx).\\n\\n\x3c!--truncate--\x3e\\n\\n## The problem I want to solve\\n\\nI am using the dotnet project [cangulo.nuke.releasecreator](https://github.com/cangulo-nuke/cangulo.nuke.releasecreator) to add the next features to my GitHub repos:\\n\\n* A new version is released in GitHub every time I merge a PR to the main branch.\\n* The App follows [Semantic Versioning.](https://semver.org)\\n* All PR contain [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) which set the release to be created (_major_, _minor_ or _fix_).\\n\\nAt this point, I have a release process but I\'m not documenting the changes. There are two places where I should post them:\\n1. The release notes\\n2. The changelog\\n\\nI created ___cangulo.changelog___ to help me adding the changes to both.\\n\\n:::info\\nFor the rest of the article I\'m going to focus only in updating the changelog. I will talk about creating the release notes using cangulo.changelog in another post.\\n:::\\n\\nMaybe you would say, okay, why do you need a custom solution? Why don\'t you do it in the GH Action itself or in the _cangulo.nuke.releasecreator_ project? Well, when I started working on this I realize it was not so simple, here is what I took into account:\\n\\n-   The Changelog is a Markdown (MD) file, so adding the changes is not directly appending text, we should format the text to the MD language.\\n-   To make the Changelog more formal we should add other elements as:\\n\\t-   Header containing the version number\\n\\t-   A Date to know when that release was created (okay, this is a _nice to have_ \ud83d\ude01)\\n\\t-   Future elements as contributors, PR link, Link to the tests reports executed. Yes, I\'m going too far, I will keep this for future versions \ud83d\ude04\\n\\nAlthough MD is easy to write, it requires to format the text when creating elements (`#` for headers `* ` for list item, etc). So, to avoid doing that logic in shell scripts or mixing domains (release process and changelog update), I decided to implement this in a separate repository, the [cangulo.changelog repository](https://github.com/cangulo-nugets/cangulo.changelog).\\n\\n\\n## Example\\n\\n### Input: Commits from a merged PR\\nThe release 0.0.2 is created after merging a PR with the next commits list:\\n-   _fix: Solved bug in the TransactionsController that makes transactions fail_\\n-   refactor: Simplified Transactions Repository\\n-   docs: Updated docs/examples\\n-   feat: Implemented new DocumentsController\\n-   refactor: It\'s possible! You can turn a 50-line code chunk into just 3 lines. Here\'s how -> Please never write a commit message like this \ud83d\ude1c, you can find more funny messages [here](http://whatthecommit.com/85835a6ce3edb747ec06e42f6313d0a2).\\n\\n### Output: Changelog Updated\\n\\n**Next is the changelog section I would like to have for version 0.0.2**\\n\\n<BrowserWindow>\\n<Tabs>\\n  <TabItem value=\\"markdown\\" label=\\"Markdown Code\\" default>\\n\\n```markdown\\n# 0.0.2\\n\\n2021-11-20\\n\\nfix:\\n-   Solved bug in the TransactionsController that makes transactions fail\\n\\nrefactor:\\n-   Simplified Transactions Repository\\n-   It\'s possible! You can turn a 50-line code chunk into just 3 lines. Here\'s how\\n\\ndocs:\\n-   Updated docs/examples\\n\\nfeatures:\\n-   Implemented new DocumentsController\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"html\\" label=\\"Changelog Visualization\\" default>\\n\\n# 0.0.2\\n\\n2021-11-20\\n\\nfix:\\n-   Solved bug in the TransactionsController that makes transactions fail\\n\\nrefactor:\\n-   Simplified Transactions Repository\\n-   It\'s possible! You can turn a 50-line code chunk into just 3 lines. Here\'s how\\n\\ndocs:\\n-   Updated docs/examples\\n\\nfeatures:\\n-   Implemented new DocumentsController\\n\\n\\n  </TabItem>\\n</Tabs>\\n</BrowserWindow>\\n\\n## Did I achieve the goal?\\n\\nYes, I have created the [cangulo.changelog](https://www.nuget.org/packages/cangulo.changelog/) NuGet package. It is integrated in the [cangulo.nuke.releasecreator](https://github.com/cangulo-nuke/cangulo.nuke.releasecreator) solution, and this one updates the changelog every time it release a new version. Next are some changelogs I build using this solution.\\n\\n1.  [cangulo.common.testing Changelog](https://github.com/cangulo-nugets/cangulo.common.testing/blob/main/CHANGELOG.md)\\n2.  [cangulo.nuke.prcommitsvalidations Changelog](https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations/blob/main/CHANGELOG.md)\\n3.  [cangulo.nuke.releasecreator Changelog](https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/main/CHANGELOG.md)\\n\\n---\\n\\n### How to use it?\\n\\n1. The services required should be setup in your `startup.cs` by calling the `AddChangelogServices` method:\\n```csharp {8}\\nusing cangulo.changelog.Extensions;\\n//...\\npublic class Startup\\n{\\n    public void ConfigureServices(IServiceCollection services)\\n    {\\n\\t\\t  //...\\n\\t    services.AddChangelogServices(settings);\\n\\t    //...\\n    }\\n}\\n```\\n<Caption  label=\\"Example at cangulo.nuke.releasecreator\\" linkIsRelative=\\"false\\"  link=\\"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/src/cangulo.nuke.releasecreator/build.startup.cs#L27\\" />\\n\\nThe object passed is a `ChangelogSettings` instance. It sets the working mode (Conventional or Non Conventional Commits) in the `CommitsMode` attribute. In case you want to go with the conventional ones, you have to provide the types in the `ConventionalCommitsSettings`. \\n```csharp\\npublic class ChangelogSettings\\n{\\n  public CommitsMode CommitsMode { get; set; }\\n  public ConventionalCommitsSettings ConventionalCommitsSettings { get; set; }\\n}\\n\\npublic class ConventionalCommitsSettings\\n{\\n  public string[] Types { get; set; }\\n}\\npublic enum CommitsMode\\n{\\n  NonConventionalCommits,\\n  ConventionalCommits\\n}\\n```\\n<Caption  label=\\"Definition at cangulo.changelog\\" linkIsRelative=\\"false\\"  link=\\"https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/src/cangulo.changelog/Models/ChangelogSettings.cs\\" />\\n\\n\\n:::info Idea!\\n\\n<details>\\n  <summary>Define those settings in a json file, maybe your appsettings, and parse them. Click Here to check an example</summary>\\n\\n```json\\n{\\n    \\"commitsMode\\": \\"conventionalCommits\\",\\n    \\"conventionalCommitsSettings\\": {\\n        \\"types\\": [\\n            \\"fix\\",\\n            \\"patch\\",\\n            \\"refactor\\",\\n            \\"feat\\",\\n            \\"major\\",\\n            \\"break\\",\\n            \\"docs\\"\\n        ]\\n    }\\n}\\n```\\n<Caption  label=\\"Example at cangulo.nuke.releasecreator\\" linkIsRelative=\\"false\\"  link=\\"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/cicd/releaseSettings.json#L38\\" />\\n\\n</details>\\n  \\n:::\\n---\\n\\n2. Call the `Build` method  from the `IChangelogBuilder` interface to update your changelog:\\n\\n```csharp\\nvar changelogBuilder = serviceProvider.GetRequiredService<IChangelogBuilder>();\\nchangelogBuilder.Build(nextVersion, commitMsgs, changelogPath);\\n```\\n\\n<Caption  label=\\"Example at cangulo.nuke.releasecreator\\" linkIsRelative=\\"false\\"  link=\\"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/src/cangulo.nuke.releasecreator/build.changelog.cs#L33\\" />\\n\\n<details>\\n  <summary>IChangelogBuilder Definition</summary>\\n\\n```csharp\\n public interface IChangelogBuilder\\n {\\n     void Build(string version, string[] changes, string path);\\n }\\n```\\n\\n<Caption  label=\\"Definiton at cangulo.changelog\\" linkIsRelative=\\"false\\"  link=\\"https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/src/cangulo.changelog/Builders/ChangelogBuilder.cs\\" />\\n\\n</details>\\n\\n<AboutMePostArea/>\\n\\n<ShareCard \\n  slug=\\"projects/cangulo.changelog\\" \\n  title=\\"cangulo.changelog\\" \\n  tags={[\\"nuke\\", \\"cicd\\", \\"conventional_commits\\", \\"changelog\\"]} />\\n  \\n<Comments\\n  slug=\\"projects/cangulo.changelog\\"  />"},{"id":"cangulo.nuke.releasecreator","metadata":{"permalink":"/projects/cangulo.nuke.releasecreator","editUrl":"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nuke/cangulo.nuke.releasecreator/index.mdx","source":"@site/blog/projects/nuke/cangulo.nuke.releasecreator/index.mdx","title":"cangulo.nuke.releasecreator","description":"Not ready yet \ud83d\ude09","date":"2021-11-21T00:00:00.000Z","formattedDate":"November 21, 2021","tags":[{"label":"nuke","permalink":"/projects/tags/nuke"},{"label":"cicd","permalink":"/projects/tags/cicd"},{"label":"releases","permalink":"/projects/tags/releases"}],"readingTime":0.44,"truncated":true,"authors":[{"name":"Carlos Angulo Mascarell","title":"Software Engineer","url":"https://github.com/cangulo","imageURL":"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png","key":"cangulo"}],"prevItem":{"title":"cangulo.changelog - idea and usage","permalink":"/projects/cangulo.changelog"}},"content":"import ShareCard from \'/src/components/blog/share.js\'\\nimport Caption from \'/src/components/blog/caption.jsx\'\\nimport Comments from \'/src/components/blog/comments.js\'\\nimport AboutMePostArea from \'/src/mdx_components/aboutme_area.mdx\'\\n\\nNot ready yet \ud83d\ude09\\n\\nBut you can check the repo this post will talk about:\\n\\n* [solution cangulo.nuke.releasecreator](https://github.com/cangulo-nuke/cangulo.nuke.releasecreator)\\n* [github action to execute in ANY repository](https://github.com/cangulo-actions/cangulo.nuke.releasecreator)\\n\\n\\n\x3c!--truncate--\x3e\\n\\n:::caution README\\n\\nPlease note this project aims to solve the next problem using NUKE. \\nThere are other approaches, as using bash scripts for example, but those are out of the scope...for now \ud83d\ude09.\\n\\n:::\\n\\n<AboutMePostArea/>\\n\\n<ShareCard \\n  slug=\\"projects/cangulo.nuke.releasecreator\\" \\n  title=\\"cangulo.nuke.releasecreator\\" \\n  tags={[\\"nuke\\", \\"cicd\\", \\"releases\\"]} />\\n  \\n<Comments\\n  slug=\\"projects/cangulo.nuke.releasecreator\\"  />"}]}')}}]);