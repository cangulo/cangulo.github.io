"use strict";(self.webpackChunkcangulo_github_io=self.webpackChunkcangulo_github_io||[]).push([[376],{6695:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return h},contentTitle:function(){return d},metadata:function(){return k},assets:function(){return v},toc:function(){return f},default:function(){return N}});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=n(4473),i=n(7440),s=n(4888),u=n(2680),c=n(1007),m=n(6396),p=n(8215),g=["components"],h={slug:"cangulo.changelog-idea-and-how-to-use",title:"cangulo.changelog - Idea and how I use it",date:new Date("2021-11-26T00:00:00.000Z"),authors:"cangulo",tags:["nuke","cicd","conventional_commits"]},d=void 0,k={permalink:"/projects/cangulo.changelog-idea-and-how-to-use",editUrl:"https://github.com/cangulo/cangulo.github.io/blob/main/blog/projects/nugets/cangulo.changelog/index.md",source:"@site/blog/projects/nugets/cangulo.changelog/index.md",title:"cangulo.changelog - Idea and how I use it",description:"This is my second post explaining my CICD tools. In this case I'm going to explain how I use my cangulo.changelog nuget package to update my repos changelog. You can use it in any C# console project. I am going to refer to the cangulo.nuke.releasecreator project explained in the previous post.",date:"2021-11-26T00:00:00.000Z",formattedDate:"November 26, 2021",tags:[{label:"nuke",permalink:"/projects/tags/nuke"},{label:"cicd",permalink:"/projects/tags/cicd"},{label:"conventional_commits",permalink:"/projects/tags/conventional-commits"}],readingTime:4.605,truncated:!0,authors:[{name:"Carlos Angulo Mascarell",title:"Software Engineer",url:"https://github.com/cangulo",imageURL:"https://github.com/cangulo/cangulo/raw/main/profile_picture_preview_icon.png",key:"cangulo"}],nextItem:{title:"cangulo.nuke.releasecreator",permalink:"/projects/cangulo.nuke.releasecreator"}},v={authorsImageUrls:[void 0]},f=[{value:"The problem I want to solve",id:"the-problem-i-want-to-solve",children:[],level:2},{value:"Example",id:"example",children:[{value:"Input: Commits from a merged PR",id:"input-commits-from-a-merged-pr",children:[],level:3},{value:"Output: Changelog Updated",id:"output-changelog-updated",children:[],level:3}],level:2},{value:"Did I achieve the goal?",id:"did-i-achieve-the-goal",children:[{value:"How to use it?",id:"how-to-use-it",children:[],level:3}],level:2}],b={toc:f};function N(e){var t=e.components,n=(0,o.Z)(e,g);return(0,l.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This is my second post explaining my CICD tools. In this case I'm going to explain how I use my cangulo.changelog nuget package to update my repos changelog. You can use it in any C# console project. I am going to refer to the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator"},"cangulo.nuke.releasecreator")," project explained in the previous ",(0,l.kt)("a",{parentName:"p",href:"/projects/cangulo.nuke.releasecreator"},"post"),"."),(0,l.kt)("h2",{id:"the-problem-i-want-to-solve"},"The problem I want to solve"),(0,l.kt)("p",null,"I am using the dotnet project ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator"},"cangulo.nuke.releasecreator")," to add the next features to my GitHub repos:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A new version is released in GitHub every time I merge a PR to the main branch."),(0,l.kt)("li",{parentName:"ul"},"The App follows ",(0,l.kt)("a",{parentName:"li",href:"https://semver.org"},"Semantic Versioning.")),(0,l.kt)("li",{parentName:"ul"},"All PR contain ",(0,l.kt)("a",{parentName:"li",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits")," which set the release to be created (",(0,l.kt)("em",{parentName:"li"},"major"),", ",(0,l.kt)("em",{parentName:"li"},"minor")," or ",(0,l.kt)("em",{parentName:"li"},"fix"),").")),(0,l.kt)("p",null,"At this point, I have a release process but I'm not documenting the changes. There are two places where I should post them:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The release notes"),(0,l.kt)("li",{parentName:"ol"},"The changelog")),(0,l.kt)("p",null,"I created ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"cangulo.changelog"))," to help me adding the changes to both."),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"For the rest of the article I'm going to focus only in updating the changelog. I will talk about creating the release notes using cangulo.changelog in another post."))),(0,l.kt)("p",null,"Maybe you would say, okay, why do you need a custom solution? Why don't you do it in the GH Action itself or in the ",(0,l.kt)("em",{parentName:"p"},"cangulo.nuke.releasecreator")," project? Well, when I started working on this I realize it was not so simple, here is what I took into account:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The Changelog is a Markdown (MD) file, so adding the changes is not directly appending text, we should format the text to the MD language."),(0,l.kt)("li",{parentName:"ul"},"To make the Changelog more formal we should add other elements as:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Header containing the version number"),(0,l.kt)("li",{parentName:"ul"},"A Date to know when that release was created (okay, this is a ",(0,l.kt)("em",{parentName:"li"},"nice to have")," \ud83d\ude01)"),(0,l.kt)("li",{parentName:"ul"},"Future elements as contributors, PR link, Link to the tests reports executed. Yes, I'm going too far, I will keep this for future versions \ud83d\ude04")))),(0,l.kt)("p",null,"Although MD is easy to write, it requires to format the text when creating elements (",(0,l.kt)("inlineCode",{parentName:"p"},"#")," for headers ",(0,l.kt)("inlineCode",{parentName:"p"},"* ")," for list item, etc). So, to avoid doing that logic in shell scripts or mixing domains (release process and changelog update), I decided to implement this in a separate repository, the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nugets/cangulo.changelog"},"cangulo.changelog repository"),"."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("h3",{id:"input-commits-from-a-merged-pr"},"Input: Commits from a merged PR"),(0,l.kt)("p",null,"The release 0.0.2 is created after merging a PR with the next commits list:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"fix: Solved bug in the TransactionsController that makes transactions fail")),(0,l.kt)("li",{parentName:"ul"},"refactor: Simplified Transactions Repository"),(0,l.kt)("li",{parentName:"ul"},"docs: Updated docs/examples"),(0,l.kt)("li",{parentName:"ul"},"feat: Implemented new DocumentsController"),(0,l.kt)("li",{parentName:"ul"},"refactor: It's possible! You can turn a 50-line code chunk into just 3 lines. Here's how -> Please never write a commit message like this \ud83d\ude1c, you can find more funny messages ",(0,l.kt)("a",{parentName:"li",href:"http://whatthecommit.com/85835a6ce3edb747ec06e42f6313d0a2"},"here"),".")),(0,l.kt)("h3",{id:"output-changelog-updated"},"Output: Changelog Updated"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Next is the changelog section I would like to have for version 0.0.2")),(0,l.kt)(c.Z,{mdxType:"BrowserWindow"},(0,l.kt)(m.Z,{mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"markdown",label:"Markdown Code",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-markdown"},"# 0.0.2\n\n2021-11-20\n\nfix:\n-   Solved bug in the TransactionsController that makes transactions fail\n\nrefactor:\n-   Simplified Transactions Repository\n-   It's possible! You can turn a 50-line code chunk into just 3 lines. Here's how\n\ndocs:\n-   Updated docs/examples\n\nfeatures:\n-   Implemented new DocumentsController\n"))),(0,l.kt)(p.Z,{value:"html",label:"Changelog Visualization",default:!0,mdxType:"TabItem"},(0,l.kt)("h1",{id:"002"},"0.0.2"),(0,l.kt)("p",null,"2021-11-20"),(0,l.kt)("p",null,"fix:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Solved bug in the TransactionsController that makes transactions fail")),(0,l.kt)("p",null,"refactor:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Simplified Transactions Repository"),(0,l.kt)("li",{parentName:"ul"},"It's possible! You can turn a 50-line code chunk into just 3 lines. Here's how")),(0,l.kt)("p",null,"docs:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Updated docs/examples")),(0,l.kt)("p",null,"features:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Implemented new DocumentsController"))))),(0,l.kt)("h2",{id:"did-i-achieve-the-goal"},"Did I achieve the goal?"),(0,l.kt)("p",null,"Yes, I have created the ",(0,l.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/cangulo.changelog/"},"cangulo.changelog")," NuGet package. It is integrated in the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator"},"cangulo.nuke.releasecreator")," solution, and this one updates the changelog every time it release a new version. Next are some changelogs I build using this solution."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nugets/cangulo.common.testing/blob/main/CHANGELOG.md"},"cangulo.common.testing Changelog")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations/blob/main/CHANGELOG.md"},"cangulo.nuke.prcommitsvalidations Changelog")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/main/CHANGELOG.md"},"cangulo.nuke.releasecreator Changelog"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"how-to-use-it"},"How to use it?"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The services required should be setup in your ",(0,l.kt)("inlineCode",{parentName:"li"},"startup.cs")," by calling the ",(0,l.kt)("inlineCode",{parentName:"li"},"AddChangelogServices")," method:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"{8}","{8}":!0},"using cangulo.changelog.Extensions;\n//...\npublic class Startup\n{\n    public void ConfigureServices(IServiceCollection services)\n    {\n          //...\n        services.AddChangelogServices(settings);\n        //...\n    }\n}\n")),(0,l.kt)(i.Z,{label:"Example at cangulo.nuke.releasecreator",linkIsRelative:"false",link:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/src/cangulo.nuke.releasecreator/build.startup.cs#L27",mdxType:"Caption"}),(0,l.kt)("p",null,"The object passed is a ",(0,l.kt)("inlineCode",{parentName:"p"},"ChangelogSettings")," instance. It sets the working mode (Conventional or Non Conventional Commits) in the ",(0,l.kt)("inlineCode",{parentName:"p"},"CommitsMode")," attribute. In case you want to go with the conventional ones, you have to provide the types in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ConventionalCommitsSettings"),". "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"public class ChangelogSettings\n{\n  public CommitsMode CommitsMode { get; set; }\n  public ConventionalCommitsSettings ConventionalCommitsSettings { get; set; }\n}\n\npublic class ConventionalCommitsSettings\n{\n  public string[] Types { get; set; }\n}\npublic enum CommitsMode\n{\n  NonConventionalCommits,\n  ConventionalCommits\n}\n")),(0,l.kt)(i.Z,{label:"Definition at cangulo.changelog",linkIsRelative:"false",link:"https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/src/cangulo.changelog/Models/ChangelogSettings.cs",mdxType:"Caption"}),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Idea!")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("details",null,(0,l.kt)("summary",null,"Define those settings in a json file, maybe your appsettings, and parse them. Click Here to check an example"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "commitsMode": "conventionalCommits",\n    "conventionalCommitsSettings": {\n        "types": [\n            "fix",\n            "patch",\n            "refactor",\n            "feat",\n            "major",\n            "break",\n            "docs"\n        ]\n    }\n}\n')),(0,l.kt)(i.Z,{label:"Example at cangulo.nuke.releasecreator",linkIsRelative:"false",link:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/cicd/releaseSettings.json#L38",mdxType:"Caption"})))),(0,l.kt)("hr",null),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Call the ",(0,l.kt)("inlineCode",{parentName:"li"},"Build")," method  from the ",(0,l.kt)("inlineCode",{parentName:"li"},"IChangelogBuilder")," interface to update your changelog:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"var changelogBuilder = serviceProvider.GetRequiredService<IChangelogBuilder>();\nchangelogBuilder.Build(nextVersion, commitMsgs, changelogPath);\n")),(0,l.kt)(i.Z,{label:"Example at cangulo.nuke.releasecreator",linkIsRelative:"false",link:"https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/src/cangulo.nuke.releasecreator/build.changelog.cs#L33",mdxType:"Caption"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,"IChangelogBuilder Definition"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"}," public interface IChangelogBuilder\n {\n     void Build(string version, string[] changes, string path);\n }\n")),(0,l.kt)(i.Z,{label:"Definiton at cangulo.changelog",linkIsRelative:"false",link:"https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/src/cangulo.changelog/Builders/ChangelogBuilder.cs",mdxType:"Caption"})),(0,l.kt)(u.ZP,{mdxType:"AboutMePostArea"}),(0,l.kt)(r.Z,{slug:"projects/cangulo.changelog-idea-and-how-to-use",title:"cangulo.changelog - Idea and how I use it",tags:["nuke","cicd","cangulo.changelog","conventional_commits","changelog"],mdxType:"ShareCard"}),(0,l.kt)(s.Z,{slug:"projects/cangulo.changelog-idea-and-how-to-use",mdxType:"Comments"}))}N.isMDXComponent=!0},2680:function(e,t,n){n.d(t,{ZP:function(){return s}});var a=n(7462),o=n(3366),l=(n(7294),n(3905)),r=["components"],i={toc:[{value:"About me",id:"about-me",children:[],level:2}]};function s(e){var t=e.components,n=(0,o.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"about-me"},"About me"),(0,l.kt)("p",null,"I'm a Software Engineer at ",(0,l.kt)("a",{parentName:"p",href:"https://ohpen.com"},"Ohpen"),". I have strong experience with dotnet technologies, AWS and Terraform. I have also worked with Front-End languages as JavaScript, Angular and React. I'm a challenge-seeker person , I think all challenges are opportunities to grow. Feel free to contact me via LinkedIn."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/cangulo/cangulo/raw/main/profile_picture_aboutme_post_area.png",alt:"profile image"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Per aspera ad astra.")),(0,l.kt)("p",null,"LinkedIn - ",(0,l.kt)("a",{parentName:"p",href:"https://www.linkedin.com/in/angulomascarell"},"Carlos Angulo Mascarell"),(0,l.kt)("br",{parentName:"p"}),"\n","Twitter - ",(0,l.kt)("a",{parentName:"p",href:"https://twitter.com/angulomascarell"},"@AnguloMascarell"),(0,l.kt)("br",{parentName:"p"}),"\n","GitHub - ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/cangulo"},"Carlos Angulo Mascarell - cangulo")))}s.isMDXComponent=!0},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7462),o=n(7294),l=n(2389),r=n(9443);var i=function(){var e=(0,o.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(9521),u=n(6010),c="tabItem_1uMI";function m(e){var t,n,a,l=e.lazy,r=e.block,m=e.defaultValue,p=e.values,g=e.groupId,h=e.className,d=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=p?p:d.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),v=(0,s.lx)(k,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===m?m:null!=(t=null!=m?m:null==(n=d.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=d[0])?void 0:a.props.value;if(null!==f&&!k.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=i(),N=b.tabGroupChoices,w=b.setTabGroupChoices,C=(0,o.useState)(f),y=C[0],I=C[1],x=[],E=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var T=N[g];null!=T&&T!==y&&k.some((function(e){return e.value===T}))&&I(T)}var Z=function(e){var t=e.currentTarget,n=x.indexOf(t),a=k[n].value;a!==y&&(E(t),I(a),null!=g&&w(g,a))},S=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=x.indexOf(e.currentTarget)+1;n=x[a]||x[0];break;case"ArrowLeft":var o=x.indexOf(e.currentTarget)-1;n=x[o]||x[x.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":r},h)},k.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,className:(0,u.Z)("tabs__item",c,{"tabs__item--active":y===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:S,onFocus:Z,onClick:Z},null!=n?n:t)}))),l?(0,o.cloneElement)(d.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},d.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))}function p(e){var t=(0,l.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},1007:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7294),o="browserWindow_25XZ",l="browserWindowHeader_KqAw",r="buttons_1hjc",i="browserWindowAddressBar_3kU8",s="dot_3vUt",u="browserWindowMenuIcon_62Vr",c="bar_1GUQ",m="browserWindowBody_2pXR";var p=function(e){var t=e.children,n=e.minHeight,p=e.url;return a.createElement("div",{className:o,style:{minHeight:n}},a.createElement("div",{className:l},a.createElement("div",{className:r},a.createElement("span",{className:s,style:{background:"#f25f58"}}),a.createElement("span",{className:s,style:{background:"#fbbe3c"}}),a.createElement("span",{className:s,style:{background:"#58cb42"}})),a.createElement("div",{className:i},p),a.createElement("div",{className:u},a.createElement("div",null,a.createElement("span",{className:c}),a.createElement("span",{className:c}),a.createElement("span",{className:c})))),a.createElement("div",{className:m},t))}},7440:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.label,n=e.linkIsRelative,o=e.link;if(o){var l="true"===n?"https://raw.githubusercontent.com/cangulo/cangulo.github.io/main/blog/".concat(o):o;return a.createElement("a",{href:l},a.createElement("p",{className:"text--center"},null!=t?t:"Link to the file"))}return a.createElement("p",{className:"text--center"},null!=t?t:"Link to the file")}},4888:function(e,t,n){n.d(t,{Z:function(){return r}});var a=n(5068),o=n(7294),l=n(4610),r=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={slug:n.props.slug},n}return(0,a.Z)(t,e),t.prototype.render=function(){return o.createElement("section",{id:"post-comments"},o.createElement("h2",null,"Comments"),o.createElement(l.Z.Embed,{loadMode:"scroll",websiteId:1142,id:this.state.slug}))},t}(o.Component)},4473:function(e,t,n){var a=n(7294),o=n(3597),l=n(7332),r=n(6616),i=n(7385),s=n(8137),u=n(6339),c=n(2834),m=n(9275),p=n(8168),g=n(4276),h=n(2263);t.Z=function(e){var t=e.slug,n=e.title,d=e.tags,k=((0,h.Z)().siteConfig,"https://cangulo.github.io/"+t);return a.createElement("div",null,a.createElement("h2",null,"Did you like it? Share It!"),a.createElement(o.Z,{url:k,title:n},a.createElement(l.Z,{size:32,round:!0})),a.createElement(r.Z,{url:k,title:n,via:"AnguloMascarell",hashtags:null!=d?d:""},a.createElement(i.Z,{size:32,round:!0})),a.createElement(s.Z,{subject:"Check this post about "+n,body:"Hi there, check the next post: "+n+" \n\n",url:k},a.createElement(u.Z,{size:32,round:!0})),a.createElement(c.Z,{url:k,title:n},a.createElement(m.Z,{size:32,round:!0})),a.createElement(p.Z,{title:n,url:k},a.createElement(g.Z,{size:32,round:!0})),a.createElement("br",{style:{marginBottom:"15px"}}))}}}]);