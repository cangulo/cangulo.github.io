<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Carlos Angulo Projects</title>
        <link>https://cangulo.github.io/projects</link>
        <description>Here you can find posts related to the personal projects I do üíªÔ∏è</description>
        <lastBuildDate>Fri, 26 Nov 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[cangulo.changelog - idea and usage]]></title>
            <link>https://cangulo.github.io/projects/cangulo.changelog</link>
            <guid>cangulo.changelog</guid>
            <pubDate>Fri, 26 Nov 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This is my second post explaining my CICD tools. In this case I'm going to explain how I use my cangulo.changelog nuget package to update my repos changelog. You can use it in any C# console project. I am going to refer to the cangulo.nuke.releasecreator project explained in the previous post.]]></description>
            <content:encoded><![CDATA[<p>This is my second post explaining my CICD tools. In this case I&#x27;m going to explain how I use my cangulo.changelog nuget package to update my repos changelog. You can use it in any C# console project. I am going to refer to the <a href="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator">cangulo.nuke.releasecreator</a> project explained in the previous <a href="../../nuke/cangulo.nuke.releasecreator/index.mdx">post</a>.</p><h2>The problem I want to solve</h2><p>I am using the dotnet project <a href="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator">cangulo.nuke.releasecreator</a> to add the next features to my GitHub repos:</p><ul><li>A new version is released in GitHub every time I merge a PR to the main branch.</li><li>The App follows <a href="https://semver.org">Semantic Versioning.</a></li><li>All PR contain <a href="https://www.conventionalcommits.org/en/v1.0.0/">Conventional Commits</a> which set the release to be created (<em>major</em>, <em>minor</em> or <em>fix</em>).</li></ul><p>At this point, I have a release process but I&#x27;m not documenting the changes. There are two places where I should post them:</p><ol><li>The release notes</li><li>The changelog</li></ol><p>I created <strong><em>cangulo.changelog</em></strong> to help me adding the changes to both.</p><p>:::info
For the rest of the article I&#x27;m going to focus only in updating the changelog. I will talk about creating the release notes using cangulo.changelog in another post.
:::</p><p>Maybe you would say, okay, why do you need a custom solution? Why don&#x27;t you do it in the GH Action itself or in the <em>cangulo.nuke.releasecreator</em> project? Well, when I started working on this I realize it was not so simple, here is what I took into account:</p><ul><li>The Changelog is a Markdown (MD) file, so adding the changes is not directly appending text, we should format the text to the MD language.</li><li>To make the Changelog more formal we should add other elements as:<ul><li>Header containing the version number</li><li>A Date to know when that release was created (okay, this is a <em>nice to have</em> üòÅ)</li><li>Future elements as contributors, PR link, Link to the tests reports executed. Yes, I&#x27;m going too far, I will keep this for future versions üòÑ</li></ul></li></ul><p>Although MD is easy to write, it requires to format the text when creating elements (<code>#</code> for headers <code>* </code> for list item, etc). So, to avoid doing that logic in shell scripts or mixing domains (release process and changelog update), I decided to implement this in a separate repository, the <a href="https://github.com/cangulo-nugets/cangulo.changelog">cangulo.changelog repository</a>.</p><h2>Example</h2><h3>Input: Commits from a merged PR</h3><p>The release 0.0.2 is created after merging a PR with the next commits list:</p><ul><li><em>fix: Solved bug in the TransactionsController that makes transactions fail</em></li><li>refactor: Simplified Transactions Repository</li><li>docs: Updated docs/examples</li><li>feat: Implemented new DocumentsController</li><li>refactor: It&#x27;s possible! You can turn a 50-line code chunk into just 3 lines. Here&#x27;s how -&gt; Please never write a commit message like this üòú, you can find more funny messages <a href="http://whatthecommit.com/85835a6ce3edb747ec06e42f6313d0a2">here</a>.</li></ul><h3>Output: Changelog Updated</h3><p><strong>Next is the changelog section I would like to have for version 0.0.2</strong></p><div><div><div value="markdown" label="Markdown Code" default=""><pre><code class="language-markdown"># 0.0.2

2021-11-20

fix:
-   Solved bug in the TransactionsController that makes transactions fail

refactor:
-   Simplified Transactions Repository
-   It&#x27;s possible! You can turn a 50-line code chunk into just 3 lines. Here&#x27;s how

docs:
-   Updated docs/examples

features:
-   Implemented new DocumentsController
</code></pre></div><div value="html" label="Changelog Visualization" default=""><h1>0.0.2</h1><p>2021-11-20</p><p>fix:</p><ul><li>Solved bug in the TransactionsController that makes transactions fail</li></ul><p>refactor:</p><ul><li>Simplified Transactions Repository</li><li>It&#x27;s possible! You can turn a 50-line code chunk into just 3 lines. Here&#x27;s how</li></ul><p>docs:</p><ul><li>Updated docs/examples</li></ul><p>features:</p><ul><li>Implemented new DocumentsController</li></ul></div></div></div><h2>Did I achieve the goal?</h2><p>Yes, I have created the <a href="https://www.nuget.org/packages/cangulo.changelog/">cangulo.changelog</a> NuGet package. It is integrated in the <a href="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator">cangulo.nuke.releasecreator</a> solution, and this one updates the changelog every time it release a new version. Next are some changelogs I build using this solution.</p><ol><li><a href="https://github.com/cangulo-nugets/cangulo.common.testing/blob/main/CHANGELOG.md">cangulo.common.testing Changelog</a></li><li><a href="https://github.com/cangulo-nuke/cangulo.nuke.prcommitsvalidations/blob/main/CHANGELOG.md">cangulo.nuke.prcommitsvalidations Changelog</a></li><li><a href="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/main/CHANGELOG.md">cangulo.nuke.releasecreator Changelog</a></li></ol><hr/><h3>How to use it?</h3><ol><li>The services required should be setup in your <code>startup.cs</code> by calling the <code>AddChangelogServices</code> method:</li></ol><pre><code class="language-csharp" metastring="{8}">using cangulo.changelog.Extensions;
//...
public class Startup
{
    public void ConfigureServices(IServiceCollection services)
    {
          //...
        services.AddChangelogServices(settings);
        //...
    }
}
</code></pre><div label="Example at cangulo.nuke.releasecreator" linkIsRelative="false" link="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/src/cangulo.nuke.releasecreator/build.startup.cs#L27"></div><p>The object passed is a <code>ChangelogSettings</code> instance. It sets the working mode (Conventional or Non Conventional Commits) in the <code>CommitsMode</code> attribute. In case you want to go with the conventional ones, you have to provide the types in the <code>ConventionalCommitsSettings</code>. </p><pre><code class="language-csharp">public class ChangelogSettings
{
  public CommitsMode CommitsMode { get; set; }
  public ConventionalCommitsSettings ConventionalCommitsSettings { get; set; }
}

public class ConventionalCommitsSettings
{
  public string[] Types { get; set; }
}
public enum CommitsMode
{
  NonConventionalCommits,
  ConventionalCommits
}
</code></pre><div label="Definition at cangulo.changelog" linkIsRelative="false" link="https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/src/cangulo.changelog/Models/ChangelogSettings.cs"></div><p>:::info Idea!</p><details><summary>Define those settings in a json file, maybe your appsettings, and parse them. Click Here to check an example</summary><pre><code class="language-json">{
    &quot;commitsMode&quot;: &quot;conventionalCommits&quot;,
    &quot;conventionalCommitsSettings&quot;: {
        &quot;types&quot;: [
            &quot;fix&quot;,
            &quot;patch&quot;,
            &quot;refactor&quot;,
            &quot;feat&quot;,
            &quot;major&quot;,
            &quot;break&quot;,
            &quot;docs&quot;
        ]
    }
}
</code></pre><div label="Example at cangulo.nuke.releasecreator" linkIsRelative="false" link="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/cicd/releaseSettings.json#L38"></div></details>::: --- <ol start="2"><li>Call the <code>Build</code> method  from the <code>IChangelogBuilder</code> interface to update your changelog:</li></ol><pre><code class="language-csharp">var changelogBuilder = serviceProvider.GetRequiredService&lt;IChangelogBuilder&gt;();
changelogBuilder.Build(nextVersion, commitMsgs, changelogPath);
</code></pre><div label="Example at cangulo.nuke.releasecreator" linkIsRelative="false" link="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator/blob/v0.0.1/src/cangulo.nuke.releasecreator/build.changelog.cs#L33"></div><details><summary>IChangelogBuilder Definition</summary><pre><code class="language-csharp"> public interface IChangelogBuilder
 {
     void Build(string version, string[] changes, string path);
 }
</code></pre><div label="Definiton at cangulo.changelog" linkIsRelative="false" link="https://github.com/cangulo-nugets/cangulo.changelog/blob/v0.0.8/src/cangulo.changelog/Builders/ChangelogBuilder.cs"></div></details><div></div><div slug="projects/cangulo.changelog" title="cangulo.changelog" tags="nuke,cicd,conventional_commits,changelog"></div><div slug="projects/cangulo.changelog"></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[cangulo.nuke.releasecreator]]></title>
            <link>https://cangulo.github.io/projects/cangulo.nuke.releasecreator</link>
            <guid>cangulo.nuke.releasecreator</guid>
            <pubDate>Sun, 21 Nov 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Not ready yet üòâ]]></description>
            <content:encoded><![CDATA[<p>Not ready yet üòâ</p><p>But you can check the repo this post will talk about:</p><ul><li><a href="https://github.com/cangulo-nuke/cangulo.nuke.releasecreator">solution cangulo.nuke.releasecreator</a></li><li><a href="https://github.com/cangulo-actions/cangulo.nuke.releasecreator">github action to execute in ANY repository</a></li></ul><p>:::caution README</p><p>Please note this project aims to solve the next problem using NUKE.
There are other approaches, as using bash scripts for example, but those are out of the scope...for now üòâ.</p><p>:::</p><div></div><div slug="projects/cangulo.nuke.releasecreator" title="cangulo.nuke.releasecreator" tags="nuke,cicd,releases"></div><div slug="projects/cangulo.nuke.releasecreator"></div>]]></content:encoded>
        </item>
    </channel>
</rss>